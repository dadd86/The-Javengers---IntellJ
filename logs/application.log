2024-12-05 16:11:01 [main] INFO  org.thejavengers.Main - Inicio de la aplicación JavaFX.
2024-12-05 16:11:01 [JavaFX Application Thread] INFO  org.thejavengers.Main - Iniciando la aplicación JavaFX.
2024-12-05 16:11:02 [JavaFX Application Thread] INFO  org.thejavengers.Main - Aplicación JavaFX iniciada correctamente.
2024-12-05 16:11:04 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionMenuPrincipal - Navegando a la ventana de Gestión de Excursiones.
2024-12-05 16:11:04 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionMenuPrincipal - Ventana de Gestión de Excursiones abierta correctamente.
2024-12-05 16:11:05 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionExcurciones - Intentando abrir la vista para añadir una excursión en una nueva ventana.
2024-12-05 16:11:06 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionExcurciones - Nueva ventana de 'Añadir Excursión' abierta correctamente.
2024-12-05 16:12:00 [JavaFX Application Thread] INFO  o.t.v.g.VistaAñadirExcursion - Intentando agregar una nueva excursión.
2024-12-05 16:12:00 [JavaFX Application Thread] INFO  org.thejavengers.modelo.Excursion - Excursión creada exitosamente: Excursion{id=0, descripcion='alles', fecha=2024-12-24, dias=5, precio=50,00}
2024-12-05 16:12:00 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider
2024-12-05 16:12:00 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-12-05 16:12:00 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-12-05 16:12:00 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.2.Final
2024-12-05 16:12:00 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2024-12-05 16:12:00 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-12-05 16:12:00 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-12-05 16:12:01 [JavaFX Application Thread] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@283e3ed2
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@283e3ed2
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@283e3ed2
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@66f04079
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@66f04079
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@10ef9673
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@10ef9673
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6912abe9
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6912abe9
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3003d0b7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3003d0b7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3003d0b7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5494ad46
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5494ad46
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5494ad46
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3824f5a9
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3824f5a9
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@44154ca7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6abdbafa
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6abdbafa
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1bb2c476
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4a4f314
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6abae753
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6abae753
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6abae753
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6dd7fa94
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6dd7fa94
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6dd7fa94
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@60cb022c
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@60cb022c
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@60cb022c
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2cb8c027
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2cb8c027
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@145a6dfe
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@145a6dfe
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@460f3168
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2cdc7876
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2cdc7876
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6baed58e
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@e25b046
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@41f5763c
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5cead929
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1face4eb
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1face4eb
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3ca8c0d8
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3ca8c0d8
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@560605e7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5c2fbd9f
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@24dc814d
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5e882b0e
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@38c72405
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1925b5c7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@467c1934
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@467c1934
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@471aeaf2
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@471aeaf2
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7325e45b
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7325e45b
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3619a2d9
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3619a2d9
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@108aa897
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@579d0e
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2778d841
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62f31229
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e705c94
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6776d697
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6776d697
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ada0e8
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cb5884e
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@207dffb0
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@207dffb0
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@71ee4746
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71ee4746
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5c7e91e
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6904a97
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@64c6e5bd
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@64c6e5bd
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@548d19ea
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@504d351e
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@375c9a7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@375c9a7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2c549ec6
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2c549ec6
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1c1521a
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1c1521a
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1dba0fa9
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1dba0fa9
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4ef7e31b
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@3fd7a2b
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@77614fe7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@5ba1b525
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2a3f7a71
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@63c0b8b7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@63c0b8b7
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7faf918d
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@ce3639
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3aa481ea
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1e9cdf82
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1dbc1625
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6cb28455
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7207e3f8
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@a1f52f5
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@776f70ad
2024-12-05 16:12:01 [JavaFX Application Thread] WARN  o.hibernate.orm.connections.pooling - HHH10001002: Using built-in connection pool (not intended for production use)
2024-12-05 16:12:01 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - Initializing Connection pool with 1 Connections
2024-12-05 16:12:03 [JavaFX Application Thread] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:255)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:52)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:133)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:43)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:61)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:507)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:380)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:558)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:107)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:87)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:434)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:305)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:129)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:449)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:101)
	at org.thejavengers.utils.HibernateUtil.getSessionFactory(HibernateUtil.java:55)
	at org.thejavengers.DAO.ExcursionDAOImpl.save(ExcursionDAOImpl.java:44)
	at org.thejavengers.vista.gestionExcursiones.VistaAñadirExcursion.agregarExcursion(VistaAñadirExcursion.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at javafx.base@21.0.5/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at javafx.fxml@21.0.5/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1855)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1726)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Node.fireEvent(Node.java:8875)
	at javafx.controls@21.0.5/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Scene$MouseHandler.process(Scene.java:3984)
	at javafx.graphics@21.0.5/javafx.scene.Scene.processMouseEvent(Scene.java:1890)
	at javafx.graphics@21.0.5/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.handleMouseEvent(View.java:551)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.notifyMouse(View.java:937)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-12-05 16:12:03 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-05 16:12:03 [JavaFX Application Thread] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0
2024-12-05 16:12:03 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-12-05 16:12:03 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.lob - HHH10010002: Disabling contextual LOB creation as connection was null
2024-12-05 16:12:03 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
	Database driver: com.mysql.cj.jdbc.Driver
	Database version: 8.0
	Autocommit mode: false
	Isolation level: undefined/unknown
	Minimum pool size: 1
	Maximum pool size: 20
2024-12-05 16:12:03 [JavaFX Application Thread] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper - Error calling Driver.connect() [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:40)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:61)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:507)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:380)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:558)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:107)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:87)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:434)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:305)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:129)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:449)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:101)
	at org.thejavengers.utils.HibernateUtil.getSessionFactory(HibernateUtil.java:55)
	at org.thejavengers.DAO.ExcursionDAOImpl.save(ExcursionDAOImpl.java:44)
	at org.thejavengers.vista.gestionExcursiones.VistaAñadirExcursion.agregarExcursion(VistaAñadirExcursion.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at javafx.base@21.0.5/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at javafx.fxml@21.0.5/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1855)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1726)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Node.fireEvent(Node.java:8875)
	at javafx.controls@21.0.5/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Scene$MouseHandler.process(Scene.java:3984)
	at javafx.graphics@21.0.5/javafx.scene.Scene.processMouseEvent(Scene.java:1890)
	at javafx.graphics@21.0.5/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.handleMouseEvent(View.java:551)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.notifyMouse(View.java:937)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-12-05 16:12:03 [JavaFX Application Thread] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1045, SQLState: 28000
2024-12-05 16:12:03 [JavaFX Application Thread] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Access denied for user 'root'@'localhost' (using password: YES)
2024-12-05 16:12:03 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-12-05 16:16:10 [JavaFX Application Thread] INFO  o.t.v.g.VistaAñadirExcursion - Intentando agregar una nueva excursión.
2024-12-05 16:16:10 [JavaFX Application Thread] INFO  org.thejavengers.modelo.Excursion - Excursión creada exitosamente: Excursion{id=0, descripcion='alles', fecha=2024-12-24, dias=5, precio=50,00}
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-12-05 16:16:10 [JavaFX Application Thread] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@283e3ed2
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@283e3ed2
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@283e3ed2
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@66f04079
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@66f04079
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@10ef9673
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@10ef9673
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6912abe9
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6912abe9
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3003d0b7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3003d0b7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3003d0b7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5494ad46
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5494ad46
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5494ad46
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3824f5a9
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3824f5a9
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@44154ca7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6abdbafa
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6abdbafa
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1bb2c476
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4a4f314
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6abae753
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6abae753
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6abae753
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6dd7fa94
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6dd7fa94
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6dd7fa94
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@60cb022c
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@60cb022c
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@60cb022c
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2cb8c027
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2cb8c027
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@145a6dfe
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@145a6dfe
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@460f3168
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2cdc7876
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2cdc7876
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6baed58e
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@e25b046
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@41f5763c
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5cead929
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1face4eb
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1face4eb
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3ca8c0d8
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3ca8c0d8
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@560605e7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5c2fbd9f
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@24dc814d
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5e882b0e
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@38c72405
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1925b5c7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@467c1934
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@467c1934
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@471aeaf2
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@471aeaf2
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7325e45b
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7325e45b
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3619a2d9
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3619a2d9
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@108aa897
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@579d0e
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2778d841
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62f31229
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e705c94
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6776d697
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6776d697
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ada0e8
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cb5884e
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@207dffb0
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@207dffb0
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@71ee4746
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71ee4746
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5c7e91e
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6904a97
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@64c6e5bd
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@64c6e5bd
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@548d19ea
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@504d351e
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@375c9a7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@375c9a7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2c549ec6
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2c549ec6
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1c1521a
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1c1521a
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1dba0fa9
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1dba0fa9
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4ef7e31b
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@3fd7a2b
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@77614fe7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@5ba1b525
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2a3f7a71
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@63c0b8b7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@63c0b8b7
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7faf918d
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5e268940
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@cd982
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2d92c869
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@d4bb649
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@674d5229
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@16b578b
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3a81164f
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6a2806a8
2024-12-05 16:16:10 [JavaFX Application Thread] WARN  o.hibernate.orm.connections.pooling - HHH10001002: Using built-in connection pool (not intended for production use)
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - Initializing Connection pool with 1 Connections
2024-12-05 16:16:10 [JavaFX Application Thread] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:255)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:52)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:133)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:43)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:61)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:507)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:380)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:558)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:107)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:87)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:434)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:305)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:129)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:449)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:101)
	at org.thejavengers.utils.HibernateUtil.getSessionFactory(HibernateUtil.java:55)
	at org.thejavengers.DAO.ExcursionDAOImpl.save(ExcursionDAOImpl.java:44)
	at org.thejavengers.vista.gestionExcursiones.VistaAñadirExcursion.agregarExcursion(VistaAñadirExcursion.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at javafx.base@21.0.5/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at javafx.fxml@21.0.5/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1855)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1726)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Node.fireEvent(Node.java:8875)
	at javafx.controls@21.0.5/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Scene$MouseHandler.process(Scene.java:3984)
	at javafx.graphics@21.0.5/javafx.scene.Scene.processMouseEvent(Scene.java:1890)
	at javafx.graphics@21.0.5/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.handleMouseEvent(View.java:551)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.notifyMouse(View.java:937)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-12-05 16:16:10 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.lob - HHH10010002: Disabling contextual LOB creation as connection was null
2024-12-05 16:16:10 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
	Database driver: com.mysql.cj.jdbc.Driver
	Database version: 8.0
	Autocommit mode: false
	Isolation level: undefined/unknown
	Minimum pool size: 1
	Maximum pool size: 20
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper - Error calling Driver.connect() [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:40)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:61)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:507)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:380)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:558)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:107)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:87)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:434)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:305)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:129)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:449)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:101)
	at org.thejavengers.utils.HibernateUtil.getSessionFactory(HibernateUtil.java:55)
	at org.thejavengers.DAO.ExcursionDAOImpl.save(ExcursionDAOImpl.java:44)
	at org.thejavengers.vista.gestionExcursiones.VistaAñadirExcursion.agregarExcursion(VistaAñadirExcursion.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at javafx.base@21.0.5/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at javafx.fxml@21.0.5/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1855)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1726)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Node.fireEvent(Node.java:8875)
	at javafx.controls@21.0.5/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Scene$MouseHandler.process(Scene.java:3984)
	at javafx.graphics@21.0.5/javafx.scene.Scene.processMouseEvent(Scene.java:1890)
	at javafx.graphics@21.0.5/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.handleMouseEvent(View.java:551)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.notifyMouse(View.java:937)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-12-05 16:16:10 [JavaFX Application Thread] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1045, SQLState: 28000
2024-12-05 16:16:10 [JavaFX Application Thread] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Access denied for user 'root'@'localhost' (using password: YES)
2024-12-05 16:16:10 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-12-05 16:16:13 [JavaFX Application Thread] INFO  o.t.v.g.VistaAñadirExcursion - Intentando agregar una nueva excursión.
2024-12-05 16:16:13 [JavaFX Application Thread] INFO  org.thejavengers.modelo.Excursion - Excursión creada exitosamente: Excursion{id=0, descripcion='alles', fecha=2024-12-24, dias=5, precio=50,00}
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-12-05 16:16:13 [JavaFX Application Thread] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@283e3ed2
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@283e3ed2
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@283e3ed2
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@66f04079
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@66f04079
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@10ef9673
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@10ef9673
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6912abe9
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6912abe9
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3003d0b7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3003d0b7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3003d0b7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5494ad46
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5494ad46
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5494ad46
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3824f5a9
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3824f5a9
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@44154ca7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6abdbafa
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6abdbafa
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1bb2c476
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4a4f314
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6abae753
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6abae753
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6abae753
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6dd7fa94
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6dd7fa94
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6dd7fa94
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@60cb022c
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@60cb022c
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@60cb022c
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2cb8c027
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2cb8c027
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@145a6dfe
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@145a6dfe
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@460f3168
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2cdc7876
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2cdc7876
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6baed58e
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@e25b046
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@41f5763c
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5cead929
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1face4eb
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1face4eb
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3ca8c0d8
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3ca8c0d8
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@560605e7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5c2fbd9f
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@24dc814d
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5e882b0e
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@38c72405
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1925b5c7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@467c1934
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@467c1934
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@471aeaf2
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@471aeaf2
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7325e45b
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7325e45b
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3619a2d9
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3619a2d9
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@108aa897
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@579d0e
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2778d841
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62f31229
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e705c94
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6776d697
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6776d697
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ada0e8
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7cb5884e
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@207dffb0
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@207dffb0
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@71ee4746
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71ee4746
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5c7e91e
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6904a97
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@64c6e5bd
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@64c6e5bd
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@548d19ea
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@504d351e
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@375c9a7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@375c9a7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2c549ec6
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2c549ec6
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1c1521a
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1c1521a
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1dba0fa9
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1dba0fa9
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4ef7e31b
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@3fd7a2b
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@77614fe7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@5ba1b525
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2a3f7a71
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@63c0b8b7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@63c0b8b7
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7faf918d
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@57241e4e
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2276392e
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7d38db9b
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6e5fc1ec
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@19fe6407
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@a52815f
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@318d778d
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@21cd90f1
2024-12-05 16:16:13 [JavaFX Application Thread] WARN  o.hibernate.orm.connections.pooling - HHH10001002: Using built-in connection pool (not intended for production use)
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - Initializing Connection pool with 1 Connections
2024-12-05 16:16:13 [JavaFX Application Thread] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:255)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:52)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:133)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:43)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:61)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:507)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:380)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:558)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:107)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:87)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:434)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:305)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:129)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:449)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:101)
	at org.thejavengers.utils.HibernateUtil.getSessionFactory(HibernateUtil.java:55)
	at org.thejavengers.DAO.ExcursionDAOImpl.save(ExcursionDAOImpl.java:44)
	at org.thejavengers.vista.gestionExcursiones.VistaAñadirExcursion.agregarExcursion(VistaAñadirExcursion.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at javafx.base@21.0.5/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at javafx.fxml@21.0.5/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1855)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1726)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Node.fireEvent(Node.java:8875)
	at javafx.controls@21.0.5/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Scene$MouseHandler.process(Scene.java:3984)
	at javafx.graphics@21.0.5/javafx.scene.Scene.processMouseEvent(Scene.java:1890)
	at javafx.graphics@21.0.5/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.handleMouseEvent(View.java:551)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.notifyMouse(View.java:937)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-12-05 16:16:13 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.lob - HHH10010002: Disabling contextual LOB creation as connection was null
2024-12-05 16:16:13 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
	Database driver: com.mysql.cj.jdbc.Driver
	Database version: 8.0
	Autocommit mode: false
	Isolation level: undefined/unknown
	Minimum pool size: 1
	Maximum pool size: 20
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper - Error calling Driver.connect() [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:40)
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:61)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:507)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:380)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:558)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:107)
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:87)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:434)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:305)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:129)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:449)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:101)
	at org.thejavengers.utils.HibernateUtil.getSessionFactory(HibernateUtil.java:55)
	at org.thejavengers.DAO.ExcursionDAOImpl.save(ExcursionDAOImpl.java:44)
	at org.thejavengers.vista.gestionExcursiones.VistaAñadirExcursion.agregarExcursion(VistaAñadirExcursion.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at javafx.base@21.0.5/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270)
	at javafx.fxml@21.0.5/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1855)
	at javafx.fxml@21.0.5/javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1726)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Node.fireEvent(Node.java:8875)
	at javafx.controls@21.0.5/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207)
	at javafx.controls@21.0.5/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232)
	at javafx.base@21.0.5/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189)
	at javafx.base@21.0.5/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base@21.0.5/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base@21.0.5/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base@21.0.5/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics@21.0.5/javafx.scene.Scene$MouseHandler.process(Scene.java:3984)
	at javafx.graphics@21.0.5/javafx.scene.Scene.processMouseEvent(Scene.java:1890)
	at javafx.graphics@21.0.5/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics@21.0.5/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.handleMouseEvent(View.java:551)
	at javafx.graphics@21.0.5/com.sun.glass.ui.View.notifyMouse(View.java:937)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics@21.0.5/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-12-05 16:16:13 [JavaFX Application Thread] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1045, SQLState: 28000
2024-12-05 16:16:13 [JavaFX Application Thread] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Access denied for user 'root'@'localhost' (using password: YES)
2024-12-05 16:16:13 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-12-05 16:16:55 [main] INFO  org.thejavengers.Main - Inicio de la aplicación JavaFX.
2024-12-05 16:16:55 [JavaFX Application Thread] INFO  org.thejavengers.Main - Iniciando la aplicación JavaFX.
2024-12-05 16:16:56 [JavaFX Application Thread] INFO  org.thejavengers.Main - Aplicación JavaFX iniciada correctamente.
2024-12-05 16:16:57 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionMenuPrincipal - Navegando a la ventana de Gestión de Excursiones.
2024-12-05 16:16:58 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionMenuPrincipal - Ventana de Gestión de Excursiones abierta correctamente.
2024-12-05 16:16:59 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionExcurciones - Intentando abrir la vista para añadir una excursión en una nueva ventana.
2024-12-05 16:16:59 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionExcurciones - Nueva ventana de 'Añadir Excursión' abierta correctamente.
2024-12-05 16:17:38 [JavaFX Application Thread] INFO  o.t.v.g.VistaAñadirExcursion - Intentando agregar una nueva excursión.
2024-12-05 16:17:38 [JavaFX Application Thread] INFO  org.thejavengers.modelo.Excursion - Excursión creada exitosamente: Excursion{id=0, descripcion='Alles', fecha=2024-12-24, dias=5, precio=50,00}
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-12-05 16:17:38 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.2.Final
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-12-05 16:17:38 [JavaFX Application Thread] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a919896
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a919896
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@a919896
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@39d624f0
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@39d624f0
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c0c7af5
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c0c7af5
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1636cbc5
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1636cbc5
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1065a4bd
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1065a4bd
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1065a4bd
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@189ce3e5
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@189ce3e5
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@189ce3e5
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4798f9d1
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4798f9d1
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@67d07a04
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a2d7a0f
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a2d7a0f
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@25d12964
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@25071a7e
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@41e34480
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@41e34480
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@41e34480
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@70afa3b1
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@70afa3b1
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@70afa3b1
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5c193ec9
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5c193ec9
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5c193ec9
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@41d00bde
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@41d00bde
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@41d00bde
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1acc8020
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1acc8020
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1acc8020
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@17730ae3
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@17730ae3
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@20981b2
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@20981b2
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4346f4d6
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4346f4d6
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4346f4d6
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3d75a11e
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@325e9041
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@325e9041
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7c1483a9
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@80028b9
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@80028b9
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@80028b9
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18ed15f6
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5ef75232
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6268b8e
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@fea2e13
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@fea2e13
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7fd8d8bd
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7fd8d8bd
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1bda63b6
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2992f1b8
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@77d6c82f
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4ef2eb58
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@67df6e3
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@385cd8a5
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@790af831
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@790af831
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@207b6463
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@207b6463
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@49584461
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@49584461
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@171f341f
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@171f341f
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@397a8dbd
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@397a8dbd
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@42d9be8d
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49a981fb
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@27f8fb1d
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@27f8fb1d
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4a829d3a
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45207f31
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40838837
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@20c3b329
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@20c3b329
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7e769146
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@38e9a04e
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@64774554
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@64774554
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5910f808
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5910f808
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@13a6becd
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@13a6becd
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@13a6becd
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@66b89727
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@66b89727
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@66b89727
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@38bb2341
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@66354ce6
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@40c3c63b
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@40c3c63b
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@626070ab
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@626070ab
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@626070ab
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@320f68d
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4fbec873
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@11922da1
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@11922da1
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7406e601
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7406e601
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7406e601
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4d4245a2
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4d4245a2
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4dbd868e
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4dbd868e
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@a7c6b5b
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@a7c6b5b
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4909a2fb
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4909a2fb
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@16b9812d
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@16b9812d
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3711fc82
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@5e5e6f88
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@5ac400c2
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@ae425e
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@38e35b25
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7969d959
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7969d959
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@14c47784
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b15f19c
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@a4c4538
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@55289593
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@62e7b0e5
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@76ea2434
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1e67ca54
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@ff25006
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@504db985
2024-12-05 16:17:38 [JavaFX Application Thread] WARN  o.hibernate.orm.connections.pooling - HHH10001002: Using built-in connection pool (not intended for production use)
2024-12-05 16:17:38 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - Initializing Connection pool with 1 Connections
2024-12-05 16:17:39 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.2.0
	  major : 8
	  minor : 2
2024-12-05 16:17:39 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-12-05 16:17:39 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-12-05 16:17:39 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-05 16:17:39 [JavaFX Application Thread] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.2
2024-12-05 16:17:39 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-12-05 16:17:39 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-12-05 16:17:39 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
	Database driver: com.mysql.cj.jdbc.Driver
	Database version: 8.2
	Autocommit mode: false
	Isolation level: undefined/unknown
	Minimum pool size: 1
	Maximum pool size: 20
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72d93a4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1033bea1)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e55724e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@40d6f7a)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f3d26e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32764114)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27248216) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48bd5f37)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ee15ac2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e1fc6eb)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1da8d30c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f4e7369)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b6d1908) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b25ba10)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@104e20cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c57dc90)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f312b4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7922f787)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5f037920
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@14c47784`
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5830ac93] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79f63383]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Excursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Excursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Excursion on table excursiones
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idExcursion')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Excursion] is safe
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Excursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idExcursion with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:idExcursion]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idExcursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.idExcursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idExcursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idExcursion)]), idExcursion, identity, , ...)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:descripcion]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.descripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fechaExcursion')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaExcursion with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:fechaExcursion]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaExcursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.fechaExcursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaExcursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero_dias')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numeroDias with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:numeroDias]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numeroDias
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.numero_dias
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property numeroDias
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:precio]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.precio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Socio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Socio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Socio on table socios
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='tipo_socio')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.tipo_socio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idsocio')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Socio] is safe
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Socio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSocio with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:idSocio]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSocio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.idsocio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSocio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idsocio)]), idSocio, identity, , ...)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellidos')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellidos with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:apellidos]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellidos
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.apellidos
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellidos
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: IndexColumn(column='inscripciones_ORDER')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='inscripciones_KEY')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='inscripciones_KEY')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Collection role: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property inscripciones
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:nombre]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nombre
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Inscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Inscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Inscripcion on table inscripciones
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idInscripcion')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Inscripcion] is safe
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Inscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idInscripcion with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Inscripcion:idInscripcion]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idInscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: inscripciones.idInscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idInscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idInscripcion)]), idInscripcion, identity, , ...)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='idExcursion')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property excursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fechaInscripcion')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaInscripcion with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Inscripcion:fechaInscripcion]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaInscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: inscripciones.fechaInscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaInscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='idSocio')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property socio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Federacion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Federacion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Federacion on table federaciones
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Federacion] is safe
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Federacion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Federacion:codigo]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: federaciones.codigo
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(codigo)]), codigo, identity, , ...)
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Federacion:nombre]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: federaciones.nombre
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioEstandar
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioEstandar
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nif')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nif with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioEstandar:nif]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nif
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nif
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nif
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='seguro')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property seguro with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioEstandar:seguro]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for seguro
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.seguro
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property seguro
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioFederado
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioFederado
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='federacion')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property federacion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nif with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioFederado:nif]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nif
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nif
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nif
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioInfantil
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioInfantil
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='tutor')
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSocioTutor with lazy=false
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioInfantil:idSocioTutor]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSocioTutor
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.tutor
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSocioTutor
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idExcursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaExcursion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numeroDias
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSocio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellidos
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idInscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaInscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nif
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for seguro
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nif
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSocioTutor
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idexcursion] to be non-null as it is part of the primary key for table [excursiones]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idsocio] to be non-null as it is part of the primary key for table [socios]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idinscripcion] to be non-null as it is part of the primary key for table [inscripciones]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [codigo] to be non-null as it is part of the primary key for table [federaciones]
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.CollectionSecondPass - Second pass for collection: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Binding a OneToMany: org.thejavengers.modelo.Socio.inscripciones through a foreign key
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Mapping collection: org.thejavengers.modelo.Socio.inscripciones -> inscripciones
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.TableBinder - Retrieving property org.thejavengers.modelo.Inscripcion.socio
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.m.i.CollectionSecondPass - Mapped collection key: idSocio, one-to-many: org.thejavengers.modelo.Inscripcion
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioEstandar] is safe
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioEstandar
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioFederado] is safe
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioFederado
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioInfantil] is safe
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioInfantil
2024-12-05 16:17:40 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=21, javafx.runtime.version=21.0.5+1, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\Admin\OneDrive\UOC_DAM\3er semestre\FP058-Programación orientada a objetos con acceso a BBDD\The Javengers - IntellJ\TheJavengers_IntellJ\target\classes;C:\Users\Admin\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Admin\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Admin\.m2\repository\org\hibernate\orm\hibernate-core\6.6.2.Final\hibernate-core-6.6.2.Final.jar;C:\Users\Admin\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Admin\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Admin\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Admin\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Admin\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\Admin\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Admin\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Admin\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Admin\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Admin\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Admin\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-swing\21.0.5\javafx-swing-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-swing\21.0.5\javafx-swing-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-fxml\23\javafx-fxml-23.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-fxml\23\javafx-fxml-23-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-graphics\21.0.5\javafx-graphics-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-graphics\21.0.5\javafx-graphics-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-base\21.0.5\javafx-base-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-base\21.0.5\javafx-base-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-controls\21.0.5\javafx-controls-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-controls\21.0.5\javafx-controls-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Admin\.m2\repository\ch\qos\logback\logback-classic\1.5.12\logback-classic-1.5.12.jar;C:\Users\Admin\.m2\repository\ch\qos\logback\logback-core\1.5.12\logback-core-1.5.12.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Berlin, java.vm.specification.version=21, os.name=Windows 10, javafx.version=21.0.5, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=ES, sun.boot.library.path=C:\jdk-21.0.2\bin, sun.java.command=org.thejavengers.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Admin, user.language=es, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Java\javafx-sdk-21.0.5\lib, java.version.date=2024-01-16, java.home=C:\jdk-21.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=validate, user.script=, connection.password=Admin, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.2+13-58, user.name=Admin, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Admin\AppData\Local\Temp\, java.version=21.0.2, user.dir=C:\Users\Admin\OneDrive\UOC_DAM\3er semestre\FP058-Programación orientada a objetos con acceso a BBDD\The Javengers - IntellJ\TheJavengers_IntellJ, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2c1759f, native.encoding=UTF-8, java.library.path=C:\jdk-21.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python312\Scripts\;C:\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\MySQL\MySQL Server 8.2\bin;C:\app\Admin\product\21c\dbhomeXE\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\TDM-GCC-64\bin;C:\Program Files\TortoiseGit\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\ProgramData\chocolatey\bin;C:\Program Files (x86)\Gpg4win\..\GnuPG\bin;C:\Program Files\Git LFS;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\mosquitto;C:\Workspace\apache-maven-3.9.9\bin;C:\Users\Admin\AppData\Local\Programs\Python\Python313;C:\Users\Admin\AppData\Local\Programs\Python\Python313\Scripts;C:\Program Files\nodejs\;C:\Users\Admin\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\Admin\AppData\Local\Programs\Python\Python313\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Admin\AppData\Local\Microsoft\WindowsApps;C:\Users\Admin\AppData\Local\Programs\Microsoft VS Code\bin;C:\kotlinc\bin;C:\jdk-21.0.2\bin;C:\Users\Admin\AppData\Local\GitHubDesktop\bin;C:\Users\Admin\AppData\Local\Programs\oh-my-posh\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.2.3\bin;;C:\Users\Admin\.dotnet\tools;C:\Program Files\mosquitto;C:\Program Files\Python313;C:\Users\Admin\AppData\Roaming\npm;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.2+13-58, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC, java.class.version=65.0}
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@71623fe7] under count; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2c9265a3] under every; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@21c2c730] under any; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c36979e] under sinh; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6db9bf20] under cosh; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43ec1007] under tanh; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c3f1755] under pi; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@349de92b] under log; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4b815056] under position; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1803c479] under overlay; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@639f3ac8] under trim; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@75bd37] under cast; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7dd71a18] under collate; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@61b515ea] under extract; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@402142a9] under ifnull; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6e64d950] under pad; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6234d91b] under str; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6dc91ac1] under format; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@40e60cda] under timestampadd; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6e865bbc] under timestampdiff; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@694bad20] under current_date; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c975cbd] under current_time; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c99c052] under current_timestamp; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3bde6664] under local_date; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f48ee92] under local_time; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49fc3972] under local_datetime; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b45fb4f] under offset_datetime; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23605d05] under instant; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@26f9710b] under sql; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@349de92b
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1c044948] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@25345db4] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a1c1772] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4b815056
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@54e0c281] under trunc; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@368db89f] under bitand; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5903717d] under bitor; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5525f457] under bitxor; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@783d0b8] under bitnot; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5c11c997] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6dc91ac1
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@f48ee92
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@49fc3972
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e5bd3f1] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c3f1755
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64260b21] under chr; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7db9110d] under sysdate; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@45354812] under rank; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@321951b4] under dense_rank; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6ee26c1d] under percent_rank; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@189a7e01] under cume_dist; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@3932ae3c] under listagg; prior registration was null
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate()
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime()
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now()
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate()
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Federacion] is safe
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Federacion
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Federacion]: private accessor [nombre]
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Inscripcion] is safe
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Inscripcion
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Inscripcion]: private accessor [excursion]
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioFederado] is safe
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioFederado
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioFederado]: private accessor [apellidos]
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Socio] is safe
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Socio
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioEstandar] is safe
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioEstandar
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioInfantil] is safe
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioInfantil
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Socio]: private accessor [apellidos]
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioEstandar]: private accessor [apellidos]
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioInfantil]: private accessor [apellidos]
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Excursion] is safe
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Excursion
2024-12-05 16:17:41 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Excursion]: private accessor [descripcion]
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection (re)creation - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection row deletions - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection removals - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Federacion) `staticFetchableList` generator
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.Inscripcion.excursion]
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.Inscripcion.socio]
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Inscripcion) `staticFetchableList` generator
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.thejavengers.modelo.Socio.inscripciones#{element}]) - element descriptor
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.thejavengers.modelo.Socio.inscripciones)#finishInitialization
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.thejavengers.modelo.Socio.inscripciones) - key descriptor
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Socio) `staticFetchableList` generator
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.SocioFederado.federacion]
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioFederado) `staticFetchableList` generator
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioEstandar) `staticFetchableList` generator
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioInfantil) `staticFetchableList` generator
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Excursion) `staticFetchableList` generator
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.thejavengers.modelo.Socio.inscripciones#{element}]) - element descriptor
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Federacion)] with identifierForTableGroup [org.thejavengers.modelo.Federacion] for NavigablePath [org.thejavengers.modelo.Federacion] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Federacion]
 |  \-BasicFetch [org.thejavengers.modelo.Federacion.nombre]

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : org.thejavengers.modelo.Federacion) {
          primaryTableReference : federaciones as f1_0
        }
      }
    }

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Federacion
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select codigo from federaciones where codigo=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into federaciones (nombre) values (?)
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update federaciones set nombre=? where codigo=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from federaciones where codigo=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : i1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Inscripcion)] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion] for NavigablePath [org.thejavengers.modelo.Inscripcion] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@13ff050b] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion.excursion] for NavigablePath [org.thejavengers.modelo.Inscripcion.excursion] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@82d4010] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion.socio] for NavigablePath [org.thejavengers.modelo.Inscripcion.socio] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@31e40674] with identifierForTableGroup [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion] for NavigablePath [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Inscripcion]
 |  +-EntityFetchJoinedImpl [org.thejavengers.modelo.Inscripcion.excursion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.descripcion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.fechaExcursion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.numeroDias]
 |  |  \-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.precio]
 |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.fechaInscripcion]
 |  \-EntityFetchJoinedImpl [org.thejavengers.modelo.Inscripcion.socio]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.socio.apellidos]
 |  |  +-DelayedCollectionFetch [org.thejavengers.modelo.Inscripcion.socio.inscripciones]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.socio.nombre]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioEstandar).nif]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioEstandar).seguro]
 |  |  +-EntityFetchJoinedImpl [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion]
 |  |  |  \-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion.nombre]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).nif]
 |  |  \-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioInfantil).idSocioTutor]

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.thejavengers.modelo.Inscripcion) {
          primaryTableReference : inscripciones as i1_0
          TableGroupJoins {
             join LazyTableGroup (e1 : org.thejavengers.modelo.Inscripcion.excursion) {
              primaryTableReference : excursiones as e1_0
            }
             join LazyTableGroup (s1 : org.thejavengers.modelo.Inscripcion.socio) {
              primaryTableReference : socios as s1_0
              TableGroupJoins {
                left  join LazyTableGroup (f1 : treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion) {
                  primaryTableReference : federaciones as f1_0
                }
              }
            }
          }
        }
      }
    }

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Inscripcion
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idInscripcion from inscripciones where idInscripcion=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into inscripciones (idExcursion,fechaInscripcion,idSocio) values (?,?,?)
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update inscripciones set idExcursion=?,fechaInscripcion=?,idSocio=? where idInscripcion=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from inscripciones where idInscripcion=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : sf1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioFederado)] with identifierForTableGroup [org.thejavengers.modelo.SocioFederado] for NavigablePath [org.thejavengers.modelo.SocioFederado] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34e9f5ac] with identifierForTableGroup [org.thejavengers.modelo.SocioFederado.federacion] for NavigablePath [org.thejavengers.modelo.SocioFederado.federacion] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioFederado]
 |  +-BasicFetch [org.thejavengers.modelo.SocioFederado.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioFederado.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioFederado.nombre]
 |  +-EntityFetchJoinedImpl [org.thejavengers.modelo.SocioFederado.federacion]
 |  |  \-BasicFetch [org.thejavengers.modelo.SocioFederado.federacion.nombre]
 |  \-BasicFetch [org.thejavengers.modelo.SocioFederado.nif]

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (sf1 : org.thejavengers.modelo.SocioFederado) {
          primaryTableReference : socios as sf1_0
          TableGroupJoins {
             join LazyTableGroup (f1 : org.thejavengers.modelo.SocioFederado.federacion) {
              primaryTableReference : federaciones as f1_0
            }
          }
        }
      }
    }

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioFederado
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,federacion,nif,tipo_socio) values (?,?,?,?,'federado')
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,federacion=?,nif=? where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Socio)] with identifierForTableGroup [org.thejavengers.modelo.Socio] for NavigablePath [org.thejavengers.modelo.Socio] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ac8be4b] with identifierForTableGroup [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion] for NavigablePath [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Socio]
 |  +-BasicFetch [org.thejavengers.modelo.Socio.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.Socio.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.Socio.nombre]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioEstandar).nif]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioEstandar).seguro]
 |  +-EntityFetchJoinedImpl [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion]
 |  |  \-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion.nombre]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).nif]
 |  \-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioInfantil).idSocioTutor]

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : org.thejavengers.modelo.Socio) {
          primaryTableReference : socios as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion) {
              primaryTableReference : federaciones as f1_0
            }
          }
        }
      }
    }

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Socio
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,tipo_socio) values (?,?,'Socio')
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=? where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : se1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioEstandar)] with identifierForTableGroup [org.thejavengers.modelo.SocioEstandar] for NavigablePath [org.thejavengers.modelo.SocioEstandar] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioEstandar]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioEstandar.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.nombre]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.nif]
 |  \-BasicFetch [org.thejavengers.modelo.SocioEstandar.seguro]

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (se1 : org.thejavengers.modelo.SocioEstandar) {
          primaryTableReference : socios as se1_0
        }
      }
    }

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioEstandar
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,nif,seguro,tipo_socio) values (?,?,?,?,'estandar')
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,nif=?,seguro=? where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : si1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioInfantil)] with identifierForTableGroup [org.thejavengers.modelo.SocioInfantil] for NavigablePath [org.thejavengers.modelo.SocioInfantil] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioInfantil]
 |  +-BasicFetch [org.thejavengers.modelo.SocioInfantil.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioInfantil.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioInfantil.nombre]
 |  \-BasicFetch [org.thejavengers.modelo.SocioInfantil.idSocioTutor]

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (si1 : org.thejavengers.modelo.SocioInfantil) {
          primaryTableReference : socios as si1_0
        }
      }
    }

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioInfantil
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,tutor,tipo_socio) values (?,?,?,'infantil')
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,tutor=? where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Excursion)] with identifierForTableGroup [org.thejavengers.modelo.Excursion] for NavigablePath [org.thejavengers.modelo.Excursion] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Excursion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.descripcion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.fechaExcursion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.numeroDias]
 |  \-BasicFetch [org.thejavengers.modelo.Excursion.precio]

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : org.thejavengers.modelo.Excursion) {
          primaryTableReference : excursiones as e1_0
        }
      }
    }

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Excursion
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idExcursion from excursiones where idExcursion=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into excursiones (descripcion,fechaExcursion,numero_dias,precio) values (?,?,?,?)
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update excursiones set descripcion=?,fechaExcursion=?,numero_dias=?,precio=? where idExcursion=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from excursiones where idExcursion=?
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : i1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7b5a5dd1] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Socio.inscripciones.{element})] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@620141db] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}.excursion] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}.excursion] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@73cfa848] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}.socio] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}.socio] 
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-CollectionDomainResult [org.thejavengers.modelo.Socio.inscripciones]

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (i1 : org.thejavengers.modelo.Socio.inscripciones) {
          primaryTableReference : inscripciones as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (e1 : org.thejavengers.modelo.Socio.inscripciones.{element}.excursion) {
              primaryTableReference : excursiones as e1_0
            }
            left  join LazyTableGroup (s1 : org.thejavengers.modelo.Socio.inscripciones.{element}.socio) {
            }
          }
        }
      }
    }

2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Static SQL for collection: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5830ac93] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@f05922e]
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2024-12-05 16:17:42 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@18175a4e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@169adff3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@f05922e]
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2aa2ce66
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
2024-12-05 16:17:42 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-12-05 16:18:09 [JavaFX Application Thread] INFO  o.t.v.g.VistaAñadirExcursion - Intentando agregar una nueva excursión.
2024-12-05 16:18:09 [JavaFX Application Thread] INFO  org.thejavengers.modelo.Excursion - Excursión creada exitosamente: Excursion{id=0, descripcion='Alles', fecha=2024-12-24, dias=5, precio=50,00}
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-12-05 16:18:09 [JavaFX Application Thread] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a919896
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a919896
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@a919896
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@39d624f0
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@39d624f0
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c0c7af5
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c0c7af5
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1636cbc5
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1636cbc5
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1065a4bd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1065a4bd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1065a4bd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@189ce3e5
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@189ce3e5
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@189ce3e5
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4798f9d1
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4798f9d1
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@67d07a04
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a2d7a0f
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a2d7a0f
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@25d12964
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@25071a7e
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@41e34480
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@41e34480
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@41e34480
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@70afa3b1
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@70afa3b1
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@70afa3b1
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5c193ec9
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5c193ec9
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5c193ec9
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@41d00bde
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@41d00bde
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@41d00bde
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1acc8020
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1acc8020
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1acc8020
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@17730ae3
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@17730ae3
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@20981b2
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@20981b2
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4346f4d6
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4346f4d6
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4346f4d6
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3d75a11e
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@325e9041
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@325e9041
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7c1483a9
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@80028b9
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@80028b9
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@80028b9
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18ed15f6
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5ef75232
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6268b8e
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@fea2e13
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@fea2e13
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7fd8d8bd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7fd8d8bd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1bda63b6
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2992f1b8
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@77d6c82f
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4ef2eb58
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@67df6e3
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@385cd8a5
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@790af831
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@790af831
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@207b6463
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@207b6463
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@49584461
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@49584461
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@171f341f
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@171f341f
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@397a8dbd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@397a8dbd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@42d9be8d
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49a981fb
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@27f8fb1d
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@27f8fb1d
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4a829d3a
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45207f31
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40838837
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@20c3b329
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@20c3b329
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7e769146
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@38e9a04e
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@64774554
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@64774554
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5910f808
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5910f808
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@13a6becd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@13a6becd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@13a6becd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@66b89727
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@66b89727
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@66b89727
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@38bb2341
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@66354ce6
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@40c3c63b
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@40c3c63b
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@626070ab
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@626070ab
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@626070ab
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@320f68d
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4fbec873
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@11922da1
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@11922da1
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7406e601
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7406e601
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7406e601
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4d4245a2
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4d4245a2
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4dbd868e
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4dbd868e
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@a7c6b5b
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@a7c6b5b
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4909a2fb
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4909a2fb
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@16b9812d
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@16b9812d
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3711fc82
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@5e5e6f88
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@5ac400c2
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@ae425e
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@38e35b25
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7969d959
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7969d959
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@14c47784
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3aebb845
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7ad7c894
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2417a366
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@341ba7c2
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@53d51894
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1782f912
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@e976417
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@675bf7b0
2024-12-05 16:18:09 [JavaFX Application Thread] WARN  o.hibernate.orm.connections.pooling - HHH10001002: Using built-in connection pool (not intended for production use)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - Initializing Connection pool with 1 Connections
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.2.0
	  major : 8
	  minor : 2
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-12-05 16:18:09 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.2
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-12-05 16:18:09 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
	Database driver: com.mysql.cj.jdbc.Driver
	Database version: 8.2
	Autocommit mode: false
	Isolation level: undefined/unknown
	Minimum pool size: 1
	Maximum pool size: 20
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@403b89c5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21f5d476)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c8e38c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11a42272)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d4df422) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@214d799)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7fa1b723) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f26bd17)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d28bc35) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@9a41e16)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7bceb8ae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17a6cc5)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@695ba1cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@40a65658)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e238d2a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c6ddc6f)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@288c73d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a6ae40f)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@87278b5
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@14c47784`
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@22(java.time.Duration,3015)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@22(java.time.Duration,3015)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@22(java.time.Duration,3015)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@23(java.time.OffsetDateTime,3003)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@23(java.time.OffsetDateTime,3003)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@23(java.time.OffsetDateTime,3003)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@24(java.time.ZonedDateTime,3003)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@24(java.time.ZonedDateTime,3003)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@24(java.time.ZonedDateTime,3003)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@25(java.time.OffsetTime,3007)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@25(java.time.OffsetTime,3007)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@25(java.time.OffsetTime,3007)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a8e5370] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3157bd02]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Excursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Excursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Excursion on table excursiones
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idExcursion')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Excursion] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Excursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idExcursion with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:idExcursion]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idExcursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.idExcursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idExcursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idExcursion)]), idExcursion, identity, , ...)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:descripcion]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.descripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fechaExcursion')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaExcursion with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:fechaExcursion]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaExcursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.fechaExcursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaExcursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero_dias')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numeroDias with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:numeroDias]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numeroDias
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.numero_dias
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property numeroDias
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:precio]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.precio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Socio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Socio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Socio on table socios
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='tipo_socio')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.tipo_socio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idsocio')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Socio] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Socio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSocio with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:idSocio]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSocio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.idsocio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSocio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idsocio)]), idSocio, identity, , ...)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellidos')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellidos with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:apellidos]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellidos
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.apellidos
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellidos
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: IndexColumn(column='inscripciones_ORDER')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='inscripciones_KEY')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='inscripciones_KEY')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Collection role: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property inscripciones
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:nombre]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nombre
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Inscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Inscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Inscripcion on table inscripciones
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idInscripcion')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Inscripcion] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Inscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idInscripcion with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Inscripcion:idInscripcion]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idInscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: inscripciones.idInscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idInscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idInscripcion)]), idInscripcion, identity, , ...)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='idExcursion')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property excursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fechaInscripcion')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaInscripcion with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Inscripcion:fechaInscripcion]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaInscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: inscripciones.fechaInscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaInscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='idSocio')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property socio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Federacion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Federacion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Federacion on table federaciones
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Federacion] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Federacion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Federacion:codigo]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: federaciones.codigo
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(codigo)]), codigo, identity, , ...)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Federacion:nombre]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: federaciones.nombre
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioEstandar
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioEstandar
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nif')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nif with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioEstandar:nif]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nif
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nif
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nif
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='seguro')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property seguro with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioEstandar:seguro]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for seguro
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.seguro
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property seguro
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioFederado
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioFederado
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='federacion')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property federacion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nif with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioFederado:nif]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nif
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nif
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nif
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioInfantil
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioInfantil
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='tutor')
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSocioTutor with lazy=false
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioInfantil:idSocioTutor]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSocioTutor
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.tutor
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSocioTutor
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idExcursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaExcursion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numeroDias
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSocio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellidos
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idInscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaInscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nif
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for seguro
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nif
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSocioTutor
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idexcursion] to be non-null as it is part of the primary key for table [excursiones]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idsocio] to be non-null as it is part of the primary key for table [socios]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idinscripcion] to be non-null as it is part of the primary key for table [inscripciones]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [codigo] to be non-null as it is part of the primary key for table [federaciones]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.CollectionSecondPass - Second pass for collection: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Binding a OneToMany: org.thejavengers.modelo.Socio.inscripciones through a foreign key
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Mapping collection: org.thejavengers.modelo.Socio.inscripciones -> inscripciones
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.TableBinder - Retrieving property org.thejavengers.modelo.Inscripcion.socio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.m.i.CollectionSecondPass - Mapped collection key: idSocio, one-to-many: org.thejavengers.modelo.Inscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioEstandar] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioEstandar
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioFederado] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioFederado
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioInfantil] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioInfantil
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=21, javafx.runtime.version=21.0.5+1, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\Admin\OneDrive\UOC_DAM\3er semestre\FP058-Programación orientada a objetos con acceso a BBDD\The Javengers - IntellJ\TheJavengers_IntellJ\target\classes;C:\Users\Admin\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Admin\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Admin\.m2\repository\org\hibernate\orm\hibernate-core\6.6.2.Final\hibernate-core-6.6.2.Final.jar;C:\Users\Admin\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Admin\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Admin\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Admin\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Admin\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\Admin\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Admin\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Admin\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Admin\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Admin\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Admin\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-swing\21.0.5\javafx-swing-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-swing\21.0.5\javafx-swing-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-fxml\23\javafx-fxml-23.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-fxml\23\javafx-fxml-23-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-graphics\21.0.5\javafx-graphics-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-graphics\21.0.5\javafx-graphics-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-base\21.0.5\javafx-base-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-base\21.0.5\javafx-base-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-controls\21.0.5\javafx-controls-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-controls\21.0.5\javafx-controls-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Admin\.m2\repository\ch\qos\logback\logback-classic\1.5.12\logback-classic-1.5.12.jar;C:\Users\Admin\.m2\repository\ch\qos\logback\logback-core\1.5.12\logback-core-1.5.12.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Berlin, java.vm.specification.version=21, os.name=Windows 10, javafx.version=21.0.5, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=ES, sun.boot.library.path=C:\jdk-21.0.2\bin, sun.java.command=org.thejavengers.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Admin, user.language=es, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Java\javafx-sdk-21.0.5\lib, java.version.date=2024-01-16, java.home=C:\jdk-21.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=validate, user.script=, connection.password=Admin, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.2+13-58, user.name=Admin, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Admin\AppData\Local\Temp\, java.version=21.0.2, user.dir=C:\Users\Admin\OneDrive\UOC_DAM\3er semestre\FP058-Programación orientada a objetos con acceso a BBDD\The Javengers - IntellJ\TheJavengers_IntellJ, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@57e04da8, native.encoding=UTF-8, java.library.path=C:\jdk-21.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python312\Scripts\;C:\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\MySQL\MySQL Server 8.2\bin;C:\app\Admin\product\21c\dbhomeXE\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\TDM-GCC-64\bin;C:\Program Files\TortoiseGit\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\ProgramData\chocolatey\bin;C:\Program Files (x86)\Gpg4win\..\GnuPG\bin;C:\Program Files\Git LFS;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\mosquitto;C:\Workspace\apache-maven-3.9.9\bin;C:\Users\Admin\AppData\Local\Programs\Python\Python313;C:\Users\Admin\AppData\Local\Programs\Python\Python313\Scripts;C:\Program Files\nodejs\;C:\Users\Admin\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\Admin\AppData\Local\Programs\Python\Python313\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Admin\AppData\Local\Microsoft\WindowsApps;C:\Users\Admin\AppData\Local\Programs\Microsoft VS Code\bin;C:\kotlinc\bin;C:\jdk-21.0.2\bin;C:\Users\Admin\AppData\Local\GitHubDesktop\bin;C:\Users\Admin\AppData\Local\Programs\oh-my-posh\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.2.3\bin;;C:\Users\Admin\.dotnet\tools;C:\Program Files\mosquitto;C:\Program Files\Python313;C:\Users\Admin\AppData\Roaming\npm;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.2+13-58, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC, java.class.version=65.0}
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2ff81b9a] under count; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@30043084] under every; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@701274] under any; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55a892df] under sinh; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ae3773b] under cosh; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2bf2e0f3] under tanh; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b91a44b] under pi; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3abef58c] under log; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1bc5074f] under position; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@270c89bc] under overlay; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@119c2ea] under trim; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4cc655d0] under cast; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f0adc78] under collate; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3c08fb4c] under extract; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@734960b5] under ifnull; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@d5fd3d9] under pad; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@249f2716] under str; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5f366a52] under format; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6742e5c9] under timestampadd; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@147033e3] under timestampdiff; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@490a11ec] under current_date; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25828665] under current_time; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@559e53b1] under current_timestamp; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40648dca] under local_date; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59f8615b] under local_time; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68f865af] under local_datetime; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fdcb0da] under offset_datetime; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b326e36] under instant; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@31da30b2] under sql; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3abef58c
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1aa4ee3b] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3054d7d5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@82f5c37] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1bc5074f
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6810b220] under trunc; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55f84c2f] under bitand; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4304c33a] under bitor; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3138f189] under bitxor; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5cd4c43c] under bitnot; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b5a62bd] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5f366a52
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@59f8615b
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@68f865af
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ea265ff] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b91a44b
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58e07d1b] under chr; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22efa71f] under sysdate; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3a387675] under rank; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7086150] under dense_rank; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5c5bdc0f] under percent_rank; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3534fc4] under cume_dist; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7a211a05] under listagg; prior registration was null
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate()
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Federacion] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Federacion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Federacion]: private accessor [nombre]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Inscripcion] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Inscripcion
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Inscripcion]: private accessor [excursion]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioFederado] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioFederado
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioFederado]: private accessor [apellidos]
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Socio] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Socio
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioEstandar] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioEstandar
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioInfantil] is safe
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioInfantil
2024-12-05 16:18:09 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Socio]: private accessor [apellidos]
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioEstandar]: private accessor [apellidos]
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioInfantil]: private accessor [apellidos]
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Excursion] is safe
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Excursion
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Excursion]: private accessor [descripcion]
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection (re)creation - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection row deletions - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection removals - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Federacion) `staticFetchableList` generator
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.Inscripcion.excursion]
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.Inscripcion.socio]
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Inscripcion) `staticFetchableList` generator
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.thejavengers.modelo.Socio.inscripciones#{element}]) - element descriptor
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.thejavengers.modelo.Socio.inscripciones)#finishInitialization
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.thejavengers.modelo.Socio.inscripciones) - key descriptor
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Socio) `staticFetchableList` generator
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.SocioFederado.federacion]
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioFederado) `staticFetchableList` generator
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioEstandar) `staticFetchableList` generator
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioInfantil) `staticFetchableList` generator
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Excursion) `staticFetchableList` generator
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.thejavengers.modelo.Socio.inscripciones#{element}]) - element descriptor
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Federacion)] with identifierForTableGroup [org.thejavengers.modelo.Federacion] for NavigablePath [org.thejavengers.modelo.Federacion] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Federacion]
 |  \-BasicFetch [org.thejavengers.modelo.Federacion.nombre]

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : org.thejavengers.modelo.Federacion) {
          primaryTableReference : federaciones as f1_0
        }
      }
    }

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Federacion
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select codigo from federaciones where codigo=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into federaciones (nombre) values (?)
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update federaciones set nombre=? where codigo=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from federaciones where codigo=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : i1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Inscripcion)] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion] for NavigablePath [org.thejavengers.modelo.Inscripcion] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@68cf4438] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion.excursion] for NavigablePath [org.thejavengers.modelo.Inscripcion.excursion] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@648a274e] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion.socio] for NavigablePath [org.thejavengers.modelo.Inscripcion.socio] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@58bde1b8] with identifierForTableGroup [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion] for NavigablePath [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Inscripcion]
 |  +-EntityFetchJoinedImpl [org.thejavengers.modelo.Inscripcion.excursion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.descripcion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.fechaExcursion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.numeroDias]
 |  |  \-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.precio]
 |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.fechaInscripcion]
 |  \-EntityFetchJoinedImpl [org.thejavengers.modelo.Inscripcion.socio]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.socio.apellidos]
 |  |  +-DelayedCollectionFetch [org.thejavengers.modelo.Inscripcion.socio.inscripciones]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.socio.nombre]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioEstandar).nif]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioEstandar).seguro]
 |  |  +-EntityFetchJoinedImpl [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion]
 |  |  |  \-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion.nombre]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).nif]
 |  |  \-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioInfantil).idSocioTutor]

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.thejavengers.modelo.Inscripcion) {
          primaryTableReference : inscripciones as i1_0
          TableGroupJoins {
             join LazyTableGroup (e1 : org.thejavengers.modelo.Inscripcion.excursion) {
              primaryTableReference : excursiones as e1_0
            }
             join LazyTableGroup (s1 : org.thejavengers.modelo.Inscripcion.socio) {
              primaryTableReference : socios as s1_0
              TableGroupJoins {
                left  join LazyTableGroup (f1 : treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion) {
                  primaryTableReference : federaciones as f1_0
                }
              }
            }
          }
        }
      }
    }

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Inscripcion
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idInscripcion from inscripciones where idInscripcion=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into inscripciones (idExcursion,fechaInscripcion,idSocio) values (?,?,?)
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update inscripciones set idExcursion=?,fechaInscripcion=?,idSocio=? where idInscripcion=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from inscripciones where idInscripcion=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : sf1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioFederado)] with identifierForTableGroup [org.thejavengers.modelo.SocioFederado] for NavigablePath [org.thejavengers.modelo.SocioFederado] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15084e3a] with identifierForTableGroup [org.thejavengers.modelo.SocioFederado.federacion] for NavigablePath [org.thejavengers.modelo.SocioFederado.federacion] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioFederado]
 |  +-BasicFetch [org.thejavengers.modelo.SocioFederado.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioFederado.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioFederado.nombre]
 |  +-EntityFetchJoinedImpl [org.thejavengers.modelo.SocioFederado.federacion]
 |  |  \-BasicFetch [org.thejavengers.modelo.SocioFederado.federacion.nombre]
 |  \-BasicFetch [org.thejavengers.modelo.SocioFederado.nif]

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (sf1 : org.thejavengers.modelo.SocioFederado) {
          primaryTableReference : socios as sf1_0
          TableGroupJoins {
             join LazyTableGroup (f1 : org.thejavengers.modelo.SocioFederado.federacion) {
              primaryTableReference : federaciones as f1_0
            }
          }
        }
      }
    }

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioFederado
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,federacion,nif,tipo_socio) values (?,?,?,?,'federado')
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,federacion=?,nif=? where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Socio)] with identifierForTableGroup [org.thejavengers.modelo.Socio] for NavigablePath [org.thejavengers.modelo.Socio] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@66b6631e] with identifierForTableGroup [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion] for NavigablePath [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Socio]
 |  +-BasicFetch [org.thejavengers.modelo.Socio.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.Socio.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.Socio.nombre]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioEstandar).nif]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioEstandar).seguro]
 |  +-EntityFetchJoinedImpl [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion]
 |  |  \-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion.nombre]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).nif]
 |  \-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioInfantil).idSocioTutor]

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : org.thejavengers.modelo.Socio) {
          primaryTableReference : socios as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion) {
              primaryTableReference : federaciones as f1_0
            }
          }
        }
      }
    }

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Socio
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,tipo_socio) values (?,?,'Socio')
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=? where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : se1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioEstandar)] with identifierForTableGroup [org.thejavengers.modelo.SocioEstandar] for NavigablePath [org.thejavengers.modelo.SocioEstandar] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioEstandar]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioEstandar.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.nombre]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.nif]
 |  \-BasicFetch [org.thejavengers.modelo.SocioEstandar.seguro]

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (se1 : org.thejavengers.modelo.SocioEstandar) {
          primaryTableReference : socios as se1_0
        }
      }
    }

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioEstandar
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,nif,seguro,tipo_socio) values (?,?,?,?,'estandar')
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,nif=?,seguro=? where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : si1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioInfantil)] with identifierForTableGroup [org.thejavengers.modelo.SocioInfantil] for NavigablePath [org.thejavengers.modelo.SocioInfantil] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioInfantil]
 |  +-BasicFetch [org.thejavengers.modelo.SocioInfantil.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioInfantil.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioInfantil.nombre]
 |  \-BasicFetch [org.thejavengers.modelo.SocioInfantil.idSocioTutor]

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (si1 : org.thejavengers.modelo.SocioInfantil) {
          primaryTableReference : socios as si1_0
        }
      }
    }

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioInfantil
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,tutor,tipo_socio) values (?,?,?,'infantil')
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,tutor=? where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Excursion)] with identifierForTableGroup [org.thejavengers.modelo.Excursion] for NavigablePath [org.thejavengers.modelo.Excursion] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Excursion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.descripcion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.fechaExcursion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.numeroDias]
 |  \-BasicFetch [org.thejavengers.modelo.Excursion.precio]

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : org.thejavengers.modelo.Excursion) {
          primaryTableReference : excursiones as e1_0
        }
      }
    }

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Excursion
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idExcursion from excursiones where idExcursion=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into excursiones (descripcion,fechaExcursion,numero_dias,precio) values (?,?,?,?)
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update excursiones set descripcion=?,fechaExcursion=?,numero_dias=?,precio=? where idExcursion=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from excursiones where idExcursion=?
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : i1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@211bdbac] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Socio.inscripciones.{element})] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57f80e5b] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}.excursion] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}.excursion] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2be11614] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}.socio] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}.socio] 
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-CollectionDomainResult [org.thejavengers.modelo.Socio.inscripciones]

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (i1 : org.thejavengers.modelo.Socio.inscripciones) {
          primaryTableReference : inscripciones as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (e1 : org.thejavengers.modelo.Socio.inscripciones.{element}.excursion) {
              primaryTableReference : excursiones as e1_0
            }
            left  join LazyTableGroup (s1 : org.thejavengers.modelo.Socio.inscripciones.{element}.socio) {
            }
          }
        }
      }
    }

2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Static SQL for collection: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a8e5370] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@30f853e3]
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2024-12-05 16:18:10 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@59dcb442] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@d64f3c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@30f853e3]
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
2024-12-05 16:18:10 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-12-05 16:24:26 [main] INFO  org.thejavengers.Main - Inicio de la aplicación JavaFX.
2024-12-05 16:24:26 [JavaFX Application Thread] INFO  org.thejavengers.Main - Iniciando la aplicación JavaFX.
2024-12-05 16:24:27 [JavaFX Application Thread] INFO  org.thejavengers.Main - Aplicación JavaFX iniciada correctamente.
2024-12-05 16:24:28 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionMenuPrincipal - Navegando a la ventana de Gestión de Excursiones.
2024-12-05 16:24:28 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionMenuPrincipal - Ventana de Gestión de Excursiones abierta correctamente.
2024-12-05 16:24:29 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionExcurciones - Intentando abrir la vista para añadir una excursión en una nueva ventana.
2024-12-05 16:24:29 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionExcurciones - Nueva ventana de 'Añadir Excursión' abierta correctamente.
2024-12-05 16:24:42 [JavaFX Application Thread] INFO  o.t.v.g.VistaAñadirExcursion - Intentando agregar una nueva excursión.
2024-12-05 16:24:42 [JavaFX Application Thread] INFO  org.thejavengers.modelo.Excursion - Excursión creada exitosamente: Excursion{id=0, descripcion='Alles', fecha=2024-12-24, dias=5, precio=50,00}
2024-12-05 16:24:42 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider
2024-12-05 16:24:42 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-12-05 16:24:42 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-12-05 16:24:42 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.2.Final
2024-12-05 16:24:42 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2024-12-05 16:24:42 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-12-05 16:24:42 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-12-05 16:24:43 [JavaFX Application Thread] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c2fbd9f
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c2fbd9f
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5c2fbd9f
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@24dc814d
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@24dc814d
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5e882b0e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5e882b0e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@38c72405
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@38c72405
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1925b5c7
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1925b5c7
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1925b5c7
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@467c1934
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@467c1934
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@471aeaf2
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7325e45b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7325e45b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3619a2d9
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@108aa897
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@579d0e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@579d0e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@579d0e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2778d841
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2778d841
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2778d841
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@62f31229
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@62f31229
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@62f31229
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5e705c94
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5e705c94
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5e705c94
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6776d697
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6776d697
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6ada0e8
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6ada0e8
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7cb5884e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7cb5884e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7cb5884e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@207dffb0
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@71ee4746
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@71ee4746
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5c7e91e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6904a97
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@64c6e5bd
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@548d19ea
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@548d19ea
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@504d351e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@375c9a7
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@29f6a221
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2c549ec6
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1c1521a
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1dba0fa9
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1dba0fa9
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4ef7e31b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4ef7e31b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3fd7a2b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3fd7a2b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77614fe7
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ba1b525
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a3f7a71
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a3f7a71
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@42fb613f
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f1800f0
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@69c682ab
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@387b9110
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@387b9110
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2110fdb9
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e7076eb
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3fe6454
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3fe6454
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@67e9962a
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@67e9962a
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4132525b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4132525b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4132525b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1ca8b3b8
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1ca8b3b8
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1ca8b3b8
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6c04a8bd
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@47773bd1
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@140419ee
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@140419ee
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d684da5
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d684da5
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d684da5
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@46055f5
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7a375f1b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4e48f2da
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4e48f2da
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@478bb1e3
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@478bb1e3
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@478bb1e3
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@784e18e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@784e18e
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@ed31d86
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@ed31d86
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5b1a839c
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5b1a839c
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@418435b5
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@418435b5
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@612c249a
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@612c249a
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@77053a14
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@780c510b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@1845ea22
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@184d1544
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@46c659c3
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@b277d4b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@b277d4b
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@71cd0688
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@194ea1fc
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2891d85d
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@12d51247
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@b35afd3
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6718ae08
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@41edc186
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7b10b4d6
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5dfdc750
2024-12-05 16:24:43 [JavaFX Application Thread] WARN  o.hibernate.orm.connections.pooling - HHH10001002: Using built-in connection pool (not intended for production use)
2024-12-05 16:24:43 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - Initializing Connection pool with 1 Connections
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.2.0
	  major : 8
	  minor : 2
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-12-05 16:24:44 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.2
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-12-05 16:24:44 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
	Database driver: com.mysql.cj.jdbc.Driver
	Database version: 8.2
	Autocommit mode: false
	Isolation level: undefined/unknown
	Minimum pool size: 1
	Maximum pool size: 20
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59c59c03) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@578839)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46db630d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35ce51d0)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@409ee6ee) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7cb4a884)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@616a7f14) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26edf238)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1173c99d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48dab3bf)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7afaf76f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@33cfa63a)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c7faeff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21a5a584)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@cc97f50) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@42f9e685)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@330b073) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f35ac14)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@554a1908
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@71cd0688`
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21e568fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@447101f7]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Excursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Excursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Excursion on table excursiones
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idExcursion')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Excursion] is safe
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Excursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idExcursion with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:idExcursion]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idExcursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.idExcursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idExcursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idExcursion)]), idExcursion, identity, , ...)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:descripcion]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.descripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fechaExcursion')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaExcursion with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:fechaExcursion]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaExcursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.fechaExcursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaExcursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero_dias')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numeroDias with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:numeroDias]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numeroDias
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.numero_dias
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property numeroDias
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:precio]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.precio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Socio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Socio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Socio on table socios
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='tipo_socio')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.tipo_socio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idsocio')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Socio] is safe
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Socio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSocio with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:idSocio]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSocio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.idsocio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSocio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idsocio)]), idSocio, identity, , ...)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellidos')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellidos with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:apellidos]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellidos
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.apellidos
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellidos
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: IndexColumn(column='inscripciones_ORDER')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='inscripciones_KEY')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='inscripciones_KEY')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Collection role: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property inscripciones
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:nombre]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nombre
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Inscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Inscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Inscripcion on table inscripciones
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idInscripcion')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Inscripcion] is safe
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Inscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idInscripcion with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Inscripcion:idInscripcion]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idInscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: inscripciones.idInscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idInscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idInscripcion)]), idInscripcion, identity, , ...)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='idExcursion')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property excursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fechaInscripcion')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaInscripcion with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Inscripcion:fechaInscripcion]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaInscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: inscripciones.fechaInscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaInscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='idSocio')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property socio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Federacion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Federacion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Federacion on table federaciones
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Federacion] is safe
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Federacion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Federacion:codigo]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: federaciones.codigo
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(codigo)]), codigo, identity, , ...)
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Federacion:nombre]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: federaciones.nombre
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioEstandar
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioEstandar
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nif')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nif with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioEstandar:nif]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nif
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nif
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nif
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='seguro')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property seguro with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioEstandar:seguro]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for seguro
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.seguro
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property seguro
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioFederado
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioFederado
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='federacion')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property federacion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nif with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioFederado:nif]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nif
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nif
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nif
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioInfantil
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioInfantil
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='tutor')
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSocioTutor with lazy=false
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioInfantil:idSocioTutor]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSocioTutor
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.tutor
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSocioTutor
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idExcursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaExcursion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numeroDias
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSocio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellidos
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idInscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaInscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nif
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for seguro
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nif
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSocioTutor
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idexcursion] to be non-null as it is part of the primary key for table [excursiones]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idsocio] to be non-null as it is part of the primary key for table [socios]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idinscripcion] to be non-null as it is part of the primary key for table [inscripciones]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [codigo] to be non-null as it is part of the primary key for table [federaciones]
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.CollectionSecondPass - Second pass for collection: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Binding a OneToMany: org.thejavengers.modelo.Socio.inscripciones through a foreign key
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Mapping collection: org.thejavengers.modelo.Socio.inscripciones -> inscripciones
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.TableBinder - Retrieving property org.thejavengers.modelo.Inscripcion.socio
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.m.i.CollectionSecondPass - Mapped collection key: idSocio, one-to-many: org.thejavengers.modelo.Inscripcion
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioEstandar] is safe
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioEstandar
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioFederado] is safe
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioFederado
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioInfantil] is safe
2024-12-05 16:24:44 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioInfantil
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=21, javafx.runtime.version=21.0.5+1, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\Admin\OneDrive\UOC_DAM\3er semestre\FP058-Programación orientada a objetos con acceso a BBDD\The Javengers - IntellJ\TheJavengers_IntellJ\target\classes;C:\Users\Admin\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Admin\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Admin\.m2\repository\org\hibernate\orm\hibernate-core\6.6.2.Final\hibernate-core-6.6.2.Final.jar;C:\Users\Admin\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Admin\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Admin\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Admin\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Admin\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\Admin\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Admin\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Admin\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Admin\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Admin\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Admin\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-swing\21.0.5\javafx-swing-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-swing\21.0.5\javafx-swing-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-fxml\23\javafx-fxml-23.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-fxml\23\javafx-fxml-23-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-graphics\21.0.5\javafx-graphics-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-graphics\21.0.5\javafx-graphics-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-base\21.0.5\javafx-base-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-base\21.0.5\javafx-base-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-controls\21.0.5\javafx-controls-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-controls\21.0.5\javafx-controls-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Admin\.m2\repository\ch\qos\logback\logback-classic\1.5.12\logback-classic-1.5.12.jar;C:\Users\Admin\.m2\repository\ch\qos\logback\logback-core\1.5.12\logback-core-1.5.12.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Berlin, java.vm.specification.version=21, os.name=Windows 10, javafx.version=21.0.5, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=ES, sun.boot.library.path=C:\jdk-21.0.2\bin, sun.java.command=org.thejavengers.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Admin, user.language=es, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Java\javafx-sdk-21.0.5\lib, java.version.date=2024-01-16, java.home=C:\jdk-21.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=validate, user.script=, connection.password=Admin, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.2+13-58, user.name=Admin, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Admin\AppData\Local\Temp\, java.version=21.0.2, user.dir=C:\Users\Admin\OneDrive\UOC_DAM\3er semestre\FP058-Programación orientada a objetos con acceso a BBDD\The Javengers - IntellJ\TheJavengers_IntellJ, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ecc2a1e, native.encoding=UTF-8, java.library.path=C:\jdk-21.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python312\Scripts\;C:\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\MySQL\MySQL Server 8.2\bin;C:\app\Admin\product\21c\dbhomeXE\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\TDM-GCC-64\bin;C:\Program Files\TortoiseGit\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\ProgramData\chocolatey\bin;C:\Program Files (x86)\Gpg4win\..\GnuPG\bin;C:\Program Files\Git LFS;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\mosquitto;C:\Workspace\apache-maven-3.9.9\bin;C:\Users\Admin\AppData\Local\Programs\Python\Python313;C:\Users\Admin\AppData\Local\Programs\Python\Python313\Scripts;C:\Program Files\nodejs\;C:\Users\Admin\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\Admin\AppData\Local\Programs\Python\Python313\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Admin\AppData\Local\Microsoft\WindowsApps;C:\Users\Admin\AppData\Local\Programs\Microsoft VS Code\bin;C:\kotlinc\bin;C:\jdk-21.0.2\bin;C:\Users\Admin\AppData\Local\GitHubDesktop\bin;C:\Users\Admin\AppData\Local\Programs\oh-my-posh\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.2.3\bin;;C:\Users\Admin\.dotnet\tools;C:\Program Files\mosquitto;C:\Program Files\Python313;C:\Users\Admin\AppData\Roaming\npm;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.2+13-58, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC, java.class.version=65.0}
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@26ec224f] under count; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4ef0fb66] under every; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@793af173] under any; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@572a2b9] under sinh; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b91ac63] under cosh; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65f6d1a0] under tanh; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@677a4c9f] under pi; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@770d5da3] under log; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4472e2bc] under position; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7ffb9ed2] under overlay; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2942ea46] under trim; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@77861abb] under cast; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31f59d8e] under collate; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5afe2b7a] under extract; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7e3deb0a] under ifnull; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1105a261] under pad; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4826c939] under str; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6d4439af] under format; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1e8a5a0f] under timestampadd; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@518ca213] under timestampdiff; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@15c00b16] under current_date; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6aa1884d] under current_time; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20ce33af] under current_timestamp; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@440a2e0d] under local_date; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51070521] under local_time; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@37821cac] under local_datetime; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@668012b8] under offset_datetime; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@73ef3223] under instant; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@51ef985a] under sql; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@770d5da3
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e6b37ef] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6740b0b6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70220eb7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4472e2bc
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@137f91db] under trunc; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2129918e] under bitand; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e444bfe] under bitor; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c70e2ea] under bitxor; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33ee51f6] under bitnot; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5e2613e4] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6d4439af
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@51070521
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@37821cac
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32d1b865] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@677a4c9f
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@696d7b67] under chr; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@284df65d] under sysdate; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4eb2afc8] under rank; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@cc3f4bb] under dense_rank; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@b193823] under percent_rank; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@236a5fa8] under cume_dist; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5874559d] under listagg; prior registration was null
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate()
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime()
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now()
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate()
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Federacion] is safe
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Federacion
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Federacion]: private accessor [nombre]
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Inscripcion] is safe
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Inscripcion
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Inscripcion]: private accessor [excursion]
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioFederado] is safe
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioFederado
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioFederado]: private accessor [apellidos]
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Socio] is safe
2024-12-05 16:24:45 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Socio
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioEstandar] is safe
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioEstandar
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioInfantil] is safe
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioInfantil
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Socio]: private accessor [apellidos]
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioEstandar]: private accessor [apellidos]
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioInfantil]: private accessor [apellidos]
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Excursion] is safe
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Excursion
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Excursion]: private accessor [descripcion]
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection (re)creation - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection row deletions - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection removals - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Federacion) `staticFetchableList` generator
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.Inscripcion.excursion]
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.Inscripcion.socio]
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Inscripcion) `staticFetchableList` generator
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.thejavengers.modelo.Socio.inscripciones#{element}]) - element descriptor
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.thejavengers.modelo.Socio.inscripciones)#finishInitialization
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.thejavengers.modelo.Socio.inscripciones) - key descriptor
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Socio) `staticFetchableList` generator
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.SocioFederado.federacion]
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioFederado) `staticFetchableList` generator
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioEstandar) `staticFetchableList` generator
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioInfantil) `staticFetchableList` generator
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Excursion) `staticFetchableList` generator
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.thejavengers.modelo.Socio.inscripciones#{element}]) - element descriptor
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Federacion)] with identifierForTableGroup [org.thejavengers.modelo.Federacion] for NavigablePath [org.thejavengers.modelo.Federacion] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Federacion]
 |  \-BasicFetch [org.thejavengers.modelo.Federacion.nombre]

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : org.thejavengers.modelo.Federacion) {
          primaryTableReference : federaciones as f1_0
        }
      }
    }

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Federacion
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select codigo from federaciones where codigo=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into federaciones (nombre) values (?)
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update federaciones set nombre=? where codigo=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from federaciones where codigo=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : i1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Inscripcion)] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion] for NavigablePath [org.thejavengers.modelo.Inscripcion] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@40e83485] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion.excursion] for NavigablePath [org.thejavengers.modelo.Inscripcion.excursion] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@372e73a3] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion.socio] for NavigablePath [org.thejavengers.modelo.Inscripcion.socio] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67534bcf] with identifierForTableGroup [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion] for NavigablePath [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Inscripcion]
 |  +-EntityFetchJoinedImpl [org.thejavengers.modelo.Inscripcion.excursion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.descripcion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.fechaExcursion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.numeroDias]
 |  |  \-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.precio]
 |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.fechaInscripcion]
 |  \-EntityFetchJoinedImpl [org.thejavengers.modelo.Inscripcion.socio]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.socio.apellidos]
 |  |  +-DelayedCollectionFetch [org.thejavengers.modelo.Inscripcion.socio.inscripciones]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.socio.nombre]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioEstandar).nif]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioEstandar).seguro]
 |  |  +-EntityFetchJoinedImpl [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion]
 |  |  |  \-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion.nombre]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).nif]
 |  |  \-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioInfantil).idSocioTutor]

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.thejavengers.modelo.Inscripcion) {
          primaryTableReference : inscripciones as i1_0
          TableGroupJoins {
             join LazyTableGroup (e1 : org.thejavengers.modelo.Inscripcion.excursion) {
              primaryTableReference : excursiones as e1_0
            }
             join LazyTableGroup (s1 : org.thejavengers.modelo.Inscripcion.socio) {
              primaryTableReference : socios as s1_0
              TableGroupJoins {
                left  join LazyTableGroup (f1 : treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion) {
                  primaryTableReference : federaciones as f1_0
                }
              }
            }
          }
        }
      }
    }

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Inscripcion
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idInscripcion from inscripciones where idInscripcion=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into inscripciones (idExcursion,fechaInscripcion,idSocio) values (?,?,?)
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update inscripciones set idExcursion=?,fechaInscripcion=?,idSocio=? where idInscripcion=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from inscripciones where idInscripcion=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : sf1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioFederado)] with identifierForTableGroup [org.thejavengers.modelo.SocioFederado] for NavigablePath [org.thejavengers.modelo.SocioFederado] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@44eb612b] with identifierForTableGroup [org.thejavengers.modelo.SocioFederado.federacion] for NavigablePath [org.thejavengers.modelo.SocioFederado.federacion] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioFederado]
 |  +-BasicFetch [org.thejavengers.modelo.SocioFederado.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioFederado.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioFederado.nombre]
 |  +-EntityFetchJoinedImpl [org.thejavengers.modelo.SocioFederado.federacion]
 |  |  \-BasicFetch [org.thejavengers.modelo.SocioFederado.federacion.nombre]
 |  \-BasicFetch [org.thejavengers.modelo.SocioFederado.nif]

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (sf1 : org.thejavengers.modelo.SocioFederado) {
          primaryTableReference : socios as sf1_0
          TableGroupJoins {
             join LazyTableGroup (f1 : org.thejavengers.modelo.SocioFederado.federacion) {
              primaryTableReference : federaciones as f1_0
            }
          }
        }
      }
    }

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioFederado
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,federacion,nif,tipo_socio) values (?,?,?,?,'federado')
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,federacion=?,nif=? where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Socio)] with identifierForTableGroup [org.thejavengers.modelo.Socio] for NavigablePath [org.thejavengers.modelo.Socio] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42abb97f] with identifierForTableGroup [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion] for NavigablePath [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Socio]
 |  +-BasicFetch [org.thejavengers.modelo.Socio.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.Socio.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.Socio.nombre]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioEstandar).nif]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioEstandar).seguro]
 |  +-EntityFetchJoinedImpl [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion]
 |  |  \-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion.nombre]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).nif]
 |  \-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioInfantil).idSocioTutor]

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : org.thejavengers.modelo.Socio) {
          primaryTableReference : socios as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion) {
              primaryTableReference : federaciones as f1_0
            }
          }
        }
      }
    }

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Socio
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,tipo_socio) values (?,?,'Socio')
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=? where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : se1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioEstandar)] with identifierForTableGroup [org.thejavengers.modelo.SocioEstandar] for NavigablePath [org.thejavengers.modelo.SocioEstandar] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioEstandar]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioEstandar.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.nombre]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.nif]
 |  \-BasicFetch [org.thejavengers.modelo.SocioEstandar.seguro]

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (se1 : org.thejavengers.modelo.SocioEstandar) {
          primaryTableReference : socios as se1_0
        }
      }
    }

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioEstandar
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,nif,seguro,tipo_socio) values (?,?,?,?,'estandar')
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,nif=?,seguro=? where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : si1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioInfantil)] with identifierForTableGroup [org.thejavengers.modelo.SocioInfantil] for NavigablePath [org.thejavengers.modelo.SocioInfantil] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioInfantil]
 |  +-BasicFetch [org.thejavengers.modelo.SocioInfantil.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioInfantil.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioInfantil.nombre]
 |  \-BasicFetch [org.thejavengers.modelo.SocioInfantil.idSocioTutor]

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (si1 : org.thejavengers.modelo.SocioInfantil) {
          primaryTableReference : socios as si1_0
        }
      }
    }

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioInfantil
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,tutor,tipo_socio) values (?,?,?,'infantil')
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,tutor=? where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Excursion)] with identifierForTableGroup [org.thejavengers.modelo.Excursion] for NavigablePath [org.thejavengers.modelo.Excursion] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Excursion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.descripcion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.fechaExcursion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.numeroDias]
 |  \-BasicFetch [org.thejavengers.modelo.Excursion.precio]

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : org.thejavengers.modelo.Excursion) {
          primaryTableReference : excursiones as e1_0
        }
      }
    }

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Excursion
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idExcursion from excursiones where idExcursion=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into excursiones (descripcion,fechaExcursion,numero_dias,precio) values (?,?,?,?)
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update excursiones set descripcion=?,fechaExcursion=?,numero_dias=?,precio=? where idExcursion=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from excursiones where idExcursion=?
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : i1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1f01f98] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Socio.inscripciones.{element})] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c800a4b] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}.excursion] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}.excursion] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@787d87fb] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}.socio] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}.socio] 
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-CollectionDomainResult [org.thejavengers.modelo.Socio.inscripciones]

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (i1 : org.thejavengers.modelo.Socio.inscripciones) {
          primaryTableReference : inscripciones as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (e1 : org.thejavengers.modelo.Socio.inscripciones.{element}.excursion) {
              primaryTableReference : excursiones as e1_0
            }
            left  join LazyTableGroup (s1 : org.thejavengers.modelo.Socio.inscripciones.{element}.socio) {
            }
          }
        }
      }
    }

2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Static SQL for collection: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21e568fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2114cb44]
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2024-12-05 16:24:46 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1d589ad7] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7dea7d6e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2114cb44]
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@503a2141
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
2024-12-05 16:24:46 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-12-05 17:20:59 [main] INFO  org.thejavengers.Main - Inicio de la aplicación JavaFX.
2024-12-05 17:20:59 [JavaFX Application Thread] INFO  org.thejavengers.Main - Iniciando la aplicación JavaFX.
2024-12-05 17:21:00 [JavaFX Application Thread] INFO  org.thejavengers.Main - Aplicación JavaFX iniciada correctamente.
2024-12-05 17:21:01 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionMenuPrincipal - Navegando a la ventana de Gestión de Excursiones.
2024-12-05 17:21:01 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionMenuPrincipal - Ventana de Gestión de Excursiones abierta correctamente.
2024-12-05 17:21:01 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionExcurciones - Intentando abrir la vista para añadir una excursión en una nueva ventana.
2024-12-05 17:21:02 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionExcurciones - Nueva ventana de 'Añadir Excursión' abierta correctamente.
2024-12-05 17:21:15 [JavaFX Application Thread] INFO  o.t.v.g.VistaAñadirExcursion - Iniciando el proceso para agregar una nueva excursión.
2024-12-05 17:21:15 [JavaFX Application Thread] INFO  org.thejavengers.modelo.Excursion - Excursión creada exitosamente: Excursion{id=0, descripcion='Alles', fecha=2024-12-24, dias=5, precio=50,00}
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-12-05 17:21:15 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.2.Final
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-12-05 17:21:15 [JavaFX Application Thread] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@43546172
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7ee98634
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2cb8c027
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2cb8c027
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@145a6dfe
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@145a6dfe
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7465d1f6
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@460f3168
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@460f3168
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@460f3168
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2cdc7876
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2cdc7876
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6baed58e
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@319e536c
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@e25b046
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@41f5763c
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5cead929
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5cead929
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5cead929
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1face4eb
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1face4eb
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1face4eb
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3ca8c0d8
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3ca8c0d8
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3ca8c0d8
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@560605e7
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@560605e7
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@560605e7
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5c2fbd9f
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5c2fbd9f
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5c2fbd9f
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@24dc814d
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@24dc814d
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5e882b0e
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5e882b0e
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@38c72405
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@38c72405
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@38c72405
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1925b5c7
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@59339947
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@467c1934
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@471aeaf2
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@471aeaf2
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@471aeaf2
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7325e45b
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3619a2d9
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@108aa897
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@579d0e
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@579d0e
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5c8cb663
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2778d841
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@62f31229
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5e705c94
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6776d697
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6ada0e8
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7cb5884e
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@207dffb0
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@207dffb0
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71ee4746
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71ee4746
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1aaf1373
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4a081f90
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5c7e91e
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5c7e91e
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6904a97
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@64c6e5bd
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6e38922a
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@548d19ea
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@504d351e
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@375c9a7
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@29f6a221
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@29f6a221
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1508acbc
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2c549ec6
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1c1521a
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1c1521a
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1dba0fa9
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1dba0fa9
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4d072dee
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@452d3826
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4ef7e31b
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3fd7a2b
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@77614fe7
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@77614fe7
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5ba1b525
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5ba1b525
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5ba1b525
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2a3f7a71
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@42fb613f
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3f1800f0
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3f1800f0
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@387b9110
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@387b9110
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@387b9110
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2110fdb9
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2110fdb9
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5e7076eb
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5e7076eb
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3fe6454
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3fe6454
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@67e9962a
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@67e9962a
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4132525b
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4132525b
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1ca8b3b8
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@6c04a8bd
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@47773bd1
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@140419ee
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4d684da5
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1e9cdf82
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e9cdf82
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5a2c96da
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3cf20ff2
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6156af15
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3503a777
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@b277d4b
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@27867e42
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@737c43a0
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5b6c6aa7
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6b1189a4
2024-12-05 17:21:15 [JavaFX Application Thread] WARN  o.hibernate.orm.connections.pooling - HHH10001002: Using built-in connection pool (not intended for production use)
2024-12-05 17:21:15 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - Initializing Connection pool with 1 Connections
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.2.0
	  major : 8
	  minor : 2
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-12-05 17:21:16 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.2
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-12-05 17:21:16 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
	Database driver: com.mysql.cj.jdbc.Driver
	Database version: 8.2
	Autocommit mode: false
	Isolation level: undefined/unknown
	Minimum pool size: 1
	Maximum pool size: 20
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5f70eac8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72e70b1c)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3270d4e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dfeece5)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5007b38) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f752f6f)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@740306b2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5eb04513)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@586f3c46) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e077e73)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@52ddc997) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e198602)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f35068b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a4401f8)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1669e456) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5482490f)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53841c4a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59c59c03)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2ad9b482
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5a2c96da`
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250bfd3c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@597b64a6]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Excursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Excursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Excursion on table excursiones
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idExcursion')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Excursion] is safe
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Excursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idExcursion with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:idExcursion]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idExcursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.idExcursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idExcursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idExcursion)]), idExcursion, identity, , ...)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='descripcion')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property descripcion with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:descripcion]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for descripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.descripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property descripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fechaExcursion')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaExcursion with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:fechaExcursion]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaExcursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.fechaExcursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaExcursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='numero_dias')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property numeroDias with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:numeroDias]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for numeroDias
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.numero_dias
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property numeroDias
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='precio')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property precio with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Excursion:precio]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for precio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: excursiones.precio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property precio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Socio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Socio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Socio on table socios
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='tipo_socio')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.tipo_socio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idsocio')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Socio] is safe
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Socio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSocio with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:idSocio]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSocio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.idsocio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSocio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idsocio)]), idSocio, identity, , ...)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='apellidos')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property apellidos with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:apellidos]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for apellidos
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.apellidos
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property apellidos
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: IndexColumn(column='inscripciones_ORDER')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='inscripciones_KEY')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='inscripciones_KEY')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Collection role: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property inscripciones
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Socio:nombre]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nombre
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Inscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Inscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Inscripcion on table inscripciones
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='idInscripcion')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Inscripcion] is safe
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Inscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idInscripcion with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Inscripcion:idInscripcion]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idInscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: inscripciones.idInscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idInscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(idInscripcion)]), idInscripcion, identity, , ...)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='idExcursion')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property excursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='fechaInscripcion')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fechaInscripcion with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Inscripcion:fechaInscripcion]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fechaInscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: inscripciones.fechaInscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property fechaInscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='idSocio')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property socio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.Federacion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Federacion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.thejavengers.modelo.Federacion on table federaciones
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='codigo')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Federacion] is safe
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Federacion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property codigo with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Federacion:codigo]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for codigo
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: federaciones.codigo
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property codigo
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(codigo)]), codigo, identity, , ...)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nombre')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nombre with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.Federacion:nombre]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nombre
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: federaciones.nombre
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nombre
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: org.thejavengers.modelo
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioEstandar
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioEstandar
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='nif')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nif with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioEstandar:nif]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nif
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nif
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nif
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='seguro')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property seguro with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioEstandar:seguro]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for seguro
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.seguro
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property seguro
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioFederado
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioFederado
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='federacion')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property federacion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property nif with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioFederado:nif]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for nif
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.nif
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property nif
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.thejavengers.modelo.SocioInfantil
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name SocioInfantil
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='tutor')
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property idSocioTutor with lazy=false
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.thejavengers.modelo.SocioInfantil:idSocioTutor]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for idSocioTutor
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: socios.tutor
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.model.internal.PropertyBinder - Building property idSocioTutor
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idExcursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for descripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaExcursion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for numeroDias
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for precio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSocio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apellidos
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idInscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fechaInscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for codigo
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nombre
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nif
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for seguro
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for nif
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for idSocioTutor
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idexcursion] to be non-null as it is part of the primary key for table [excursiones]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idsocio] to be non-null as it is part of the primary key for table [socios]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [idinscripcion] to be non-null as it is part of the primary key for table [inscripciones]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [codigo] to be non-null as it is part of the primary key for table [federaciones]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.CollectionSecondPass - Second pass for collection: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Binding a OneToMany: org.thejavengers.modelo.Socio.inscripciones through a foreign key
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.internal.CollectionBinder - Mapping collection: org.thejavengers.modelo.Socio.inscripciones -> inscripciones
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.boot.model.internal.TableBinder - Retrieving property org.thejavengers.modelo.Inscripcion.socio
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.m.i.CollectionSecondPass - Mapped collection key: idSocio, one-to-many: org.thejavengers.modelo.Inscripcion
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioEstandar] is safe
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioEstandar
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioFederado] is safe
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioFederado
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioInfantil] is safe
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioInfantil
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=21, javafx.runtime.version=21.0.5+1, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\Admin\OneDrive\UOC_DAM\3er semestre\FP058-Programación orientada a objetos con acceso a BBDD\The Javengers - IntellJ\TheJavengers_IntellJ\target\classes;C:\Users\Admin\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\Admin\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\Admin\.m2\repository\org\hibernate\orm\hibernate-core\6.6.2.Final\hibernate-core-6.6.2.Final.jar;C:\Users\Admin\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Admin\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Admin\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Admin\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Admin\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\Admin\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Admin\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Admin\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Admin\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Admin\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Admin\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Admin\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-swing\21.0.5\javafx-swing-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-swing\21.0.5\javafx-swing-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-fxml\23\javafx-fxml-23.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-fxml\23\javafx-fxml-23-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-graphics\21.0.5\javafx-graphics-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-graphics\21.0.5\javafx-graphics-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-base\21.0.5\javafx-base-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-base\21.0.5\javafx-base-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-controls\21.0.5\javafx-controls-21.0.5.jar;C:\Users\Admin\.m2\repository\org\openjfx\javafx-controls\21.0.5\javafx-controls-21.0.5-win.jar;C:\Users\Admin\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Admin\.m2\repository\ch\qos\logback\logback-classic\1.5.12\logback-classic-1.5.12.jar;C:\Users\Admin\.m2\repository\ch\qos\logback\logback-core\1.5.12\logback-core-1.5.12.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Berlin, java.vm.specification.version=21, os.name=Windows 10, javafx.version=21.0.5, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=ES, sun.boot.library.path=C:\jdk-21.0.2\bin, sun.java.command=org.thejavengers.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Admin, user.language=es, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Java\javafx-sdk-21.0.5\lib, java.version.date=2024-01-16, java.home=C:\jdk-21.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=validate, user.script=, connection.password=Admin, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.2+13-58, user.name=Admin, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Admin\AppData\Local\Temp\, java.version=21.0.2, user.dir=C:\Users\Admin\OneDrive\UOC_DAM\3er semestre\FP058-Programación orientada a objetos con acceso a BBDD\The Javengers - IntellJ\TheJavengers_IntellJ, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6efe2533, native.encoding=UTF-8, java.library.path=C:\jdk-21.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python312\Scripts\;C:\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\MySQL\MySQL Server 8.2\bin;C:\app\Admin\product\21c\dbhomeXE\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\TDM-GCC-64\bin;C:\Program Files\TortoiseGit\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\ProgramData\chocolatey\bin;C:\Program Files (x86)\Gpg4win\..\GnuPG\bin;C:\Program Files\Git LFS;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\mosquitto;C:\Workspace\apache-maven-3.9.9\bin;C:\Users\Admin\AppData\Local\Programs\Python\Python313;C:\Users\Admin\AppData\Local\Programs\Python\Python313\Scripts;C:\Program Files\nodejs\;C:\Users\Admin\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\Admin\AppData\Local\Programs\Python\Python313\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Admin\AppData\Local\Microsoft\WindowsApps;C:\Users\Admin\AppData\Local\Programs\Microsoft VS Code\bin;C:\kotlinc\bin;C:\jdk-21.0.2\bin;C:\Users\Admin\AppData\Local\GitHubDesktop\bin;C:\Users\Admin\AppData\Local\Programs\oh-my-posh\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.2.3\bin;;C:\Users\Admin\.dotnet\tools;C:\Program Files\mosquitto;C:\Program Files\Python313;C:\Users\Admin\AppData\Roaming\npm;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.2+13-58, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC, java.class.version=65.0}
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5298a559] under count; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5221117] under every; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1d69a471] under any; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ef0fb66] under sinh; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@793af173] under cosh; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@97af4aa] under tanh; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c6a8233] under pi; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55887113] under log; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@46631bd7] under position; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@472a1fba] under overlay; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5b5b7aa8] under trim; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2f7638c7] under cast; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9d9ead7] under collate; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3045ccec] under extract; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@aece8c7] under ifnull; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6fbc2392] under pad; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@77861abb] under str; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@28f1744f] under format; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6b568f7e] under timestampadd; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@63dcd29b] under timestampdiff; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@262382fa] under current_date; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62c6410d] under current_time; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6d4439af] under current_timestamp; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@38df0e75] under local_date; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d16fc6] under local_time; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@52cf88b8] under local_datetime; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e8a5a0f] under offset_datetime; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ee6530d] under instant; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@596044d9] under sql; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55887113
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2ffcbb25] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@21e8a902] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15c00b16] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@46631bd7
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@313fdad4] under trunc; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c8485a] under bitand; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@200e2069] under bitor; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5be7dea] under bitxor; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a18eef3] under bitnot; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@fd7f572] under format; prior registration was org.hibernate.dialect.function.FormatFunction@28f1744f
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2d16fc6
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@52cf88b8
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e8b9189] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c6a8233
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@282ce69f] under chr; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25ceea1f] under sysdate; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2129918e] under rank; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4e444bfe] under dense_rank; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5c70e2ea] under percent_rank; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@33ee51f6] under cume_dist; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@284df65d] under listagg; prior registration was null
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate()
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Federacion] is safe
2024-12-05 17:21:16 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Federacion
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Federacion]: private accessor [nombre]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Inscripcion] is safe
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Inscripcion
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Inscripcion]: private accessor [excursion]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#excursion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.Inscripcion#socio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioFederado] is safe
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioFederado
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioFederado]: private accessor [apellidos]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.thejavengers.modelo.SocioFederado#federacion` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Socio] is safe
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Socio
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioEstandar] is safe
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioEstandar
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.SocioInfantil] is safe
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.SocioInfantil
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Socio]: private accessor [apellidos]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioEstandar]: private accessor [apellidos]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.SocioInfantil]: private accessor [apellidos]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.thejavengers.modelo.Excursion] is safe
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.thejavengers.modelo.Excursion
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.thejavengers.modelo.Excursion]: private accessor [descripcion]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection (re)creation - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection row deletions - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection removals - org.thejavengers.modelo.Socio.inscripciones
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Federacion) `staticFetchableList` generator
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.Inscripcion.excursion]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.Inscripcion.socio]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Inscripcion) `staticFetchableList` generator
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.thejavengers.modelo.Socio.inscripciones#{element}]) - element descriptor
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.thejavengers.modelo.Socio.inscripciones)#finishInitialization
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.thejavengers.modelo.Socio.inscripciones) - key descriptor
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Socio) `staticFetchableList` generator
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.thejavengers.modelo.SocioFederado.federacion]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioFederado) `staticFetchableList` generator
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioEstandar) `staticFetchableList` generator
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.SocioInfantil) `staticFetchableList` generator
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.thejavengers.modelo.Excursion) `staticFetchableList` generator
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.thejavengers.modelo.Socio.inscripciones#{element}]) - element descriptor
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Federacion)] with identifierForTableGroup [org.thejavengers.modelo.Federacion] for NavigablePath [org.thejavengers.modelo.Federacion] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Federacion]
 |  \-BasicFetch [org.thejavengers.modelo.Federacion.nombre]

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : org.thejavengers.modelo.Federacion) {
          primaryTableReference : federaciones as f1_0
        }
      }
    }

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Federacion
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select codigo from federaciones where codigo=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into federaciones (nombre) values (?)
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update federaciones set nombre=? where codigo=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from federaciones where codigo=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : i1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Inscripcion)] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion] for NavigablePath [org.thejavengers.modelo.Inscripcion] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@dee9f1d] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion.excursion] for NavigablePath [org.thejavengers.modelo.Inscripcion.excursion] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c5bab] with identifierForTableGroup [org.thejavengers.modelo.Inscripcion.socio] for NavigablePath [org.thejavengers.modelo.Inscripcion.socio] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4cfc991e] with identifierForTableGroup [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion] for NavigablePath [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Inscripcion]
 |  +-EntityFetchJoinedImpl [org.thejavengers.modelo.Inscripcion.excursion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.descripcion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.fechaExcursion]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.numeroDias]
 |  |  \-BasicFetch [org.thejavengers.modelo.Inscripcion.excursion.precio]
 |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.fechaInscripcion]
 |  \-EntityFetchJoinedImpl [org.thejavengers.modelo.Inscripcion.socio]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.socio.apellidos]
 |  |  +-DelayedCollectionFetch [org.thejavengers.modelo.Inscripcion.socio.inscripciones]
 |  |  +-BasicFetch [org.thejavengers.modelo.Inscripcion.socio.nombre]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioEstandar).nif]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioEstandar).seguro]
 |  |  +-EntityFetchJoinedImpl [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion]
 |  |  |  \-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion.nombre]
 |  |  +-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).nif]
 |  |  \-BasicFetch [treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioInfantil).idSocioTutor]

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (i1 : org.thejavengers.modelo.Inscripcion) {
          primaryTableReference : inscripciones as i1_0
          TableGroupJoins {
             join LazyTableGroup (e1 : org.thejavengers.modelo.Inscripcion.excursion) {
              primaryTableReference : excursiones as e1_0
            }
             join LazyTableGroup (s1 : org.thejavengers.modelo.Inscripcion.socio) {
              primaryTableReference : socios as s1_0
              TableGroupJoins {
                left  join LazyTableGroup (f1 : treat(org.thejavengers.modelo.Inscripcion.socio as org.thejavengers.modelo.SocioFederado).federacion) {
                  primaryTableReference : federaciones as f1_0
                }
              }
            }
          }
        }
      }
    }

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Inscripcion
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idInscripcion from inscripciones where idInscripcion=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into inscripciones (idExcursion,fechaInscripcion,idSocio) values (?,?,?)
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update inscripciones set idExcursion=?,fechaInscripcion=?,idSocio=? where idInscripcion=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from inscripciones where idInscripcion=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : sf1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioFederado)] with identifierForTableGroup [org.thejavengers.modelo.SocioFederado] for NavigablePath [org.thejavengers.modelo.SocioFederado] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e54c004] with identifierForTableGroup [org.thejavengers.modelo.SocioFederado.federacion] for NavigablePath [org.thejavengers.modelo.SocioFederado.federacion] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioFederado]
 |  +-BasicFetch [org.thejavengers.modelo.SocioFederado.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioFederado.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioFederado.nombre]
 |  +-EntityFetchJoinedImpl [org.thejavengers.modelo.SocioFederado.federacion]
 |  |  \-BasicFetch [org.thejavengers.modelo.SocioFederado.federacion.nombre]
 |  \-BasicFetch [org.thejavengers.modelo.SocioFederado.nif]

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (sf1 : org.thejavengers.modelo.SocioFederado) {
          primaryTableReference : socios as sf1_0
          TableGroupJoins {
             join LazyTableGroup (f1 : org.thejavengers.modelo.SocioFederado.federacion) {
              primaryTableReference : federaciones as f1_0
            }
          }
        }
      }
    }

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioFederado
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,federacion,nif,tipo_socio) values (?,?,?,?,'federado')
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,federacion=?,nif=? where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Socio)] with identifierForTableGroup [org.thejavengers.modelo.Socio] for NavigablePath [org.thejavengers.modelo.Socio] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@672b414e] with identifierForTableGroup [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion] for NavigablePath [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Socio]
 |  +-BasicFetch [org.thejavengers.modelo.Socio.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.Socio.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.Socio.nombre]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioEstandar).nif]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioEstandar).seguro]
 |  +-EntityFetchJoinedImpl [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion]
 |  |  \-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion.nombre]
 |  +-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).nif]
 |  \-BasicFetch [treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioInfantil).idSocioTutor]

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : org.thejavengers.modelo.Socio) {
          primaryTableReference : socios as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (f1 : treat(org.thejavengers.modelo.Socio as org.thejavengers.modelo.SocioFederado).federacion) {
              primaryTableReference : federaciones as f1_0
            }
          }
        }
      }
    }

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Socio
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,tipo_socio) values (?,?,'Socio')
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=? where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : se1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioEstandar)] with identifierForTableGroup [org.thejavengers.modelo.SocioEstandar] for NavigablePath [org.thejavengers.modelo.SocioEstandar] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioEstandar]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioEstandar.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.nombre]
 |  +-BasicFetch [org.thejavengers.modelo.SocioEstandar.nif]
 |  \-BasicFetch [org.thejavengers.modelo.SocioEstandar.seguro]

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (se1 : org.thejavengers.modelo.SocioEstandar) {
          primaryTableReference : socios as se1_0
        }
      }
    }

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioEstandar
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,nif,seguro,tipo_socio) values (?,?,?,?,'estandar')
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,nif=?,seguro=? where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : si1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.SocioInfantil)] with identifierForTableGroup [org.thejavengers.modelo.SocioInfantil] for NavigablePath [org.thejavengers.modelo.SocioInfantil] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.SocioInfantil]
 |  +-BasicFetch [org.thejavengers.modelo.SocioInfantil.apellidos]
 |  +-DelayedCollectionFetch [org.thejavengers.modelo.SocioInfantil.inscripciones]
 |  +-BasicFetch [org.thejavengers.modelo.SocioInfantil.nombre]
 |  \-BasicFetch [org.thejavengers.modelo.SocioInfantil.idSocioTutor]

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (si1 : org.thejavengers.modelo.SocioInfantil) {
          primaryTableReference : socios as si1_0
        }
      }
    }

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.SocioInfantil
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idsocio from socios where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into socios (apellidos,nombre,tutor,tipo_socio) values (?,?,?,'infantil')
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update socios set apellidos=?,nombre=?,tutor=? where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from socios where idsocio=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Excursion)] with identifierForTableGroup [org.thejavengers.modelo.Excursion] for NavigablePath [org.thejavengers.modelo.Excursion] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.thejavengers.modelo.Excursion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.descripcion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.fechaExcursion]
 |  +-BasicFetch [org.thejavengers.modelo.Excursion.numeroDias]
 |  \-BasicFetch [org.thejavengers.modelo.Excursion.precio]

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (e1 : org.thejavengers.modelo.Excursion) {
          primaryTableReference : excursiones as e1_0
        }
      }
    }

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.thejavengers.modelo.Excursion
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idExcursion from excursiones where idExcursion=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into excursiones (descripcion,fechaExcursion,numero_dias,precio) values (?,?,?,?)
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update excursiones set descripcion=?,fechaExcursion=?,numero_dias=?,precio=? where idExcursion=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from excursiones where idExcursion=?
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : i1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7a9f5797] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.thejavengers.modelo.Socio.inscripciones.{element})] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16e071f8] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}.excursion] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}.excursion] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : e1_0
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d7cc87] with identifierForTableGroup [org.thejavengers.modelo.Socio.inscripciones.{element}.socio] for NavigablePath [org.thejavengers.modelo.Socio.inscripciones.{element}.socio] 
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-CollectionDomainResult [org.thejavengers.modelo.Socio.inscripciones]

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (i1 : org.thejavengers.modelo.Socio.inscripciones) {
          primaryTableReference : inscripciones as i1_0
          TableGroupJoins {
            left  join LazyTableGroup (e1 : org.thejavengers.modelo.Socio.inscripciones.{element}.excursion) {
              primaryTableReference : excursiones as e1_0
            }
            left  join LazyTableGroup (s1 : org.thejavengers.modelo.Socio.inscripciones.{element}.socio) {
            }
          }
        }
      }
    }

2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG org.hibernate.orm.jdbc.mutation - Static SQL for collection: org.thejavengers.modelo.Socio.inscripciones
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250bfd3c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1954210a]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2024-12-05 17:21:17 [JavaFX Application Thread] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@33aae514] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1e2c03e2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1954210a]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d339b74
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.hibernate.orm.connections.pooling - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/thejavengers?serverTimezone=UTC]
2024-12-05 17:21:17 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-12-05 17:21:19 [JavaFX Application Thread] INFO  o.t.v.g.VistaAñadirExcursion - Cerrando la vista de 'Añadir Excursión' y volviendo al menú principal.
2024-12-05 17:33:05 [main] INFO  org.thejavengers.Main - Inicio de la aplicación JavaFX.
2024-12-05 17:33:05 [JavaFX Application Thread] INFO  org.thejavengers.Main - Iniciando la aplicación JavaFX.
2024-12-05 17:33:06 [JavaFX Application Thread] INFO  org.thejavengers.Main - Aplicación JavaFX iniciada correctamente.
2024-12-05 17:33:07 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionMenuPrincipal - Navegando a la ventana de Gestión de Excursiones.
2024-12-05 17:33:07 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionMenuPrincipal - Ventana de Gestión de Excursiones abierta correctamente.
2024-12-05 17:33:07 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionExcurciones - Intentando abrir la vista para añadir una excursión en una nueva ventana.
2024-12-05 17:33:08 [JavaFX Application Thread] INFO  o.t.v.g.VistaGestionExcurciones - Nueva ventana de 'Añadir Excursión' abierta correctamente.
